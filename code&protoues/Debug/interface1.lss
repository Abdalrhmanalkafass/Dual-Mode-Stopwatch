
interface1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002550  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00002550  000025e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  000025ee  2**0
                  ALLOC
  3 .stab         00001a58  00000000  00000000  000025f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000091b  00000000  00000000  00004048  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00004963  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004aa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004c13  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000685c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00007747  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000084f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008654  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000088e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000090af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 0f 0c 	jmp	0x181e	; 0x181e <__vector_1>
       8:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <__vector_2>
       c:	0c 94 c4 0b 	jmp	0x1788	; 0x1788 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e5       	ldi	r30, 0x50	; 80
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 37       	cpi	r26, 0x71	; 113
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 33 12 	call	0x2466	; 0x2466 <main>
      8a:	0c 94 a6 12 	jmp	0x254c	; 0x254c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 6f 12 	jmp	0x24de	; 0x24de <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 8b 12 	jmp	0x2516	; 0x2516 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 6f 12 	jmp	0x24de	; 0x24de <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 8b 12 	jmp	0x2516	; 0x2516 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 7f 12 	jmp	0x24fe	; 0x24fe <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 9b 12 	jmp	0x2536	; 0x2536 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <buzzer>:
signed char hour_tens = 0;
signed char mode = 1;  // 1=count up , 0= count down ,
signed char boundry = 0 ;


void buzzer() {
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1 << 0);
     b4e:	a1 e3       	ldi	r26, 0x31	; 49
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	e1 e3       	ldi	r30, 0x31	; 49
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	80 81       	ld	r24, Z
     b58:	81 60       	ori	r24, 0x01	; 1
     b5a:	8c 93       	st	X, r24

	if (mode == 0 && sec_unit == 0 && sec_tens == 0 && min_unit == 0
     b5c:	80 91 68 00 	lds	r24, 0x0068
     b60:	88 23       	and	r24, r24
     b62:	f9 f4       	brne	.+62     	; 0xba2 <buzzer+0x5c>
     b64:	80 91 6a 00 	lds	r24, 0x006A
     b68:	88 23       	and	r24, r24
     b6a:	d9 f4       	brne	.+54     	; 0xba2 <buzzer+0x5c>
     b6c:	80 91 6b 00 	lds	r24, 0x006B
     b70:	88 23       	and	r24, r24
     b72:	b9 f4       	brne	.+46     	; 0xba2 <buzzer+0x5c>
     b74:	80 91 6c 00 	lds	r24, 0x006C
     b78:	88 23       	and	r24, r24
     b7a:	99 f4       	brne	.+38     	; 0xba2 <buzzer+0x5c>
     b7c:	80 91 6d 00 	lds	r24, 0x006D
     b80:	88 23       	and	r24, r24
     b82:	79 f4       	brne	.+30     	; 0xba2 <buzzer+0x5c>
     b84:	80 91 6e 00 	lds	r24, 0x006E
     b88:	88 23       	and	r24, r24
     b8a:	59 f4       	brne	.+22     	; 0xba2 <buzzer+0x5c>
     b8c:	80 91 6f 00 	lds	r24, 0x006F
     b90:	88 23       	and	r24, r24
     b92:	39 f4       	brne	.+14     	; 0xba2 <buzzer+0x5c>
			&& min_tens == 0 && hour_unit == 0 && hour_tens == 0)

			{
		PORTD |= (1 << 0);
     b94:	a2 e3       	ldi	r26, 0x32	; 50
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	e2 e3       	ldi	r30, 0x32	; 50
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	81 60       	ori	r24, 0x01	; 1
     ba0:	8c 93       	st	X, r24
	}

}
     ba2:	cf 91       	pop	r28
     ba4:	df 91       	pop	r29
     ba6:	08 95       	ret

00000ba8 <count_up>:

void count_up() {
     ba8:	df 93       	push	r29
     baa:	cf 93       	push	r28
     bac:	cd b7       	in	r28, 0x3d	; 61
     bae:	de b7       	in	r29, 0x3e	; 62
	sec_unit++;
     bb0:	80 91 6a 00 	lds	r24, 0x006A
     bb4:	8f 5f       	subi	r24, 0xFF	; 255
     bb6:	80 93 6a 00 	sts	0x006A, r24
	if (sec_unit == 10 && sec_tens != 5) {
     bba:	80 91 6a 00 	lds	r24, 0x006A
     bbe:	8a 30       	cpi	r24, 0x0A	; 10
     bc0:	59 f4       	brne	.+22     	; 0xbd8 <count_up+0x30>
     bc2:	80 91 6b 00 	lds	r24, 0x006B
     bc6:	85 30       	cpi	r24, 0x05	; 5
     bc8:	39 f0       	breq	.+14     	; 0xbd8 <count_up+0x30>
		sec_unit = 0;
     bca:	10 92 6a 00 	sts	0x006A, r1
		sec_tens++;
     bce:	80 91 6b 00 	lds	r24, 0x006B
     bd2:	8f 5f       	subi	r24, 0xFF	; 255
     bd4:	80 93 6b 00 	sts	0x006B, r24
	}
	if (sec_unit == 10 && sec_tens == 5) {
     bd8:	80 91 6a 00 	lds	r24, 0x006A
     bdc:	8a 30       	cpi	r24, 0x0A	; 10
     bde:	69 f4       	brne	.+26     	; 0xbfa <count_up+0x52>
     be0:	80 91 6b 00 	lds	r24, 0x006B
     be4:	85 30       	cpi	r24, 0x05	; 5
     be6:	49 f4       	brne	.+18     	; 0xbfa <count_up+0x52>
		sec_unit = 0;
     be8:	10 92 6a 00 	sts	0x006A, r1
		sec_tens = 0;
     bec:	10 92 6b 00 	sts	0x006B, r1
		min_unit++;
     bf0:	80 91 6c 00 	lds	r24, 0x006C
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	80 93 6c 00 	sts	0x006C, r24
	}
	if (min_unit == 10 && min_tens != 5) {
     bfa:	80 91 6c 00 	lds	r24, 0x006C
     bfe:	8a 30       	cpi	r24, 0x0A	; 10
     c00:	59 f4       	brne	.+22     	; 0xc18 <count_up+0x70>
     c02:	80 91 6d 00 	lds	r24, 0x006D
     c06:	85 30       	cpi	r24, 0x05	; 5
     c08:	39 f0       	breq	.+14     	; 0xc18 <count_up+0x70>
		min_unit = 0;
     c0a:	10 92 6c 00 	sts	0x006C, r1
		min_tens++;
     c0e:	80 91 6d 00 	lds	r24, 0x006D
     c12:	8f 5f       	subi	r24, 0xFF	; 255
     c14:	80 93 6d 00 	sts	0x006D, r24
	}
	if (min_unit == 10 && min_tens == 5) {
     c18:	80 91 6c 00 	lds	r24, 0x006C
     c1c:	8a 30       	cpi	r24, 0x0A	; 10
     c1e:	69 f4       	brne	.+26     	; 0xc3a <count_up+0x92>
     c20:	80 91 6d 00 	lds	r24, 0x006D
     c24:	85 30       	cpi	r24, 0x05	; 5
     c26:	49 f4       	brne	.+18     	; 0xc3a <count_up+0x92>
		min_unit = 0;
     c28:	10 92 6c 00 	sts	0x006C, r1
		min_tens = 0;
     c2c:	10 92 6d 00 	sts	0x006D, r1
		hour_unit++;
     c30:	80 91 6e 00 	lds	r24, 0x006E
     c34:	8f 5f       	subi	r24, 0xFF	; 255
     c36:	80 93 6e 00 	sts	0x006E, r24
	}
	if (hour_unit == 10 && min_tens != 5) {
     c3a:	80 91 6e 00 	lds	r24, 0x006E
     c3e:	8a 30       	cpi	r24, 0x0A	; 10
     c40:	59 f4       	brne	.+22     	; 0xc58 <count_up+0xb0>
     c42:	80 91 6d 00 	lds	r24, 0x006D
     c46:	85 30       	cpi	r24, 0x05	; 5
     c48:	39 f0       	breq	.+14     	; 0xc58 <count_up+0xb0>
		hour_unit = 0;
     c4a:	10 92 6e 00 	sts	0x006E, r1
		hour_tens++;
     c4e:	80 91 6f 00 	lds	r24, 0x006F
     c52:	8f 5f       	subi	r24, 0xFF	; 255
     c54:	80 93 6f 00 	sts	0x006F, r24
	}

	if (sec_unit == 9 && sec_tens == 5 && min_unit == 9 && min_tens == 5
     c58:	80 91 6a 00 	lds	r24, 0x006A
     c5c:	89 30       	cpi	r24, 0x09	; 9
     c5e:	f1 f4       	brne	.+60     	; 0xc9c <count_up+0xf4>
     c60:	80 91 6b 00 	lds	r24, 0x006B
     c64:	85 30       	cpi	r24, 0x05	; 5
     c66:	d1 f4       	brne	.+52     	; 0xc9c <count_up+0xf4>
     c68:	80 91 6c 00 	lds	r24, 0x006C
     c6c:	89 30       	cpi	r24, 0x09	; 9
     c6e:	b1 f4       	brne	.+44     	; 0xc9c <count_up+0xf4>
     c70:	80 91 6d 00 	lds	r24, 0x006D
     c74:	85 30       	cpi	r24, 0x05	; 5
     c76:	91 f4       	brne	.+36     	; 0xc9c <count_up+0xf4>
     c78:	80 91 6e 00 	lds	r24, 0x006E
     c7c:	89 30       	cpi	r24, 0x09	; 9
     c7e:	71 f4       	brne	.+28     	; 0xc9c <count_up+0xf4>
     c80:	80 91 6f 00 	lds	r24, 0x006F
     c84:	89 30       	cpi	r24, 0x09	; 9
     c86:	51 f4       	brne	.+20     	; 0xc9c <count_up+0xf4>
			&& hour_unit == 9 && hour_tens == 9)

			{
		TIMSK &= ~(1 << OCIE1A);
     c88:	a9 e5       	ldi	r26, 0x59	; 89
     c8a:	b0 e0       	ldi	r27, 0x00	; 0
     c8c:	e9 e5       	ldi	r30, 0x59	; 89
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	80 81       	ld	r24, Z
     c92:	8f 7e       	andi	r24, 0xEF	; 239
     c94:	8c 93       	st	X, r24
		boundry=1;
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	80 93 70 00 	sts	0x0070, r24
	}
}
     c9c:	cf 91       	pop	r28
     c9e:	df 91       	pop	r29
     ca0:	08 95       	ret

00000ca2 <count_down>:

void count_down() {
     ca2:	df 93       	push	r29
     ca4:	cf 93       	push	r28
     ca6:	cd b7       	in	r28, 0x3d	; 61
     ca8:	de b7       	in	r29, 0x3e	; 62
	sec_unit--;
     caa:	80 91 6a 00 	lds	r24, 0x006A
     cae:	81 50       	subi	r24, 0x01	; 1
     cb0:	80 93 6a 00 	sts	0x006A, r24
	if (sec_unit == -1 && sec_tens != 0) {
     cb4:	80 91 6a 00 	lds	r24, 0x006A
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	61 f4       	brne	.+24     	; 0xcd4 <count_down+0x32>
     cbc:	80 91 6b 00 	lds	r24, 0x006B
     cc0:	88 23       	and	r24, r24
     cc2:	41 f0       	breq	.+16     	; 0xcd4 <count_down+0x32>
		sec_unit = 9;
     cc4:	89 e0       	ldi	r24, 0x09	; 9
     cc6:	80 93 6a 00 	sts	0x006A, r24
		sec_tens--;
     cca:	80 91 6b 00 	lds	r24, 0x006B
     cce:	81 50       	subi	r24, 0x01	; 1
     cd0:	80 93 6b 00 	sts	0x006B, r24
	}
	if (sec_unit == -1 && sec_tens == 0 && min_unit != 0) {
     cd4:	80 91 6a 00 	lds	r24, 0x006A
     cd8:	8f 3f       	cpi	r24, 0xFF	; 255
     cda:	99 f4       	brne	.+38     	; 0xd02 <count_down+0x60>
     cdc:	80 91 6b 00 	lds	r24, 0x006B
     ce0:	88 23       	and	r24, r24
     ce2:	79 f4       	brne	.+30     	; 0xd02 <count_down+0x60>
     ce4:	80 91 6c 00 	lds	r24, 0x006C
     ce8:	88 23       	and	r24, r24
     cea:	59 f0       	breq	.+22     	; 0xd02 <count_down+0x60>
		sec_unit = 9;
     cec:	89 e0       	ldi	r24, 0x09	; 9
     cee:	80 93 6a 00 	sts	0x006A, r24
		sec_tens = 5;
     cf2:	85 e0       	ldi	r24, 0x05	; 5
     cf4:	80 93 6b 00 	sts	0x006B, r24
		min_unit--;
     cf8:	80 91 6c 00 	lds	r24, 0x006C
     cfc:	81 50       	subi	r24, 0x01	; 1
     cfe:	80 93 6c 00 	sts	0x006C, r24
	}
	if (sec_unit == -1 && sec_tens == 0 && min_unit == 0 && min_tens != 0) {
     d02:	80 91 6a 00 	lds	r24, 0x006A
     d06:	8f 3f       	cpi	r24, 0xFF	; 255
     d08:	d1 f4       	brne	.+52     	; 0xd3e <count_down+0x9c>
     d0a:	80 91 6b 00 	lds	r24, 0x006B
     d0e:	88 23       	and	r24, r24
     d10:	b1 f4       	brne	.+44     	; 0xd3e <count_down+0x9c>
     d12:	80 91 6c 00 	lds	r24, 0x006C
     d16:	88 23       	and	r24, r24
     d18:	91 f4       	brne	.+36     	; 0xd3e <count_down+0x9c>
     d1a:	80 91 6d 00 	lds	r24, 0x006D
     d1e:	88 23       	and	r24, r24
     d20:	71 f0       	breq	.+28     	; 0xd3e <count_down+0x9c>
		sec_unit = 9;
     d22:	89 e0       	ldi	r24, 0x09	; 9
     d24:	80 93 6a 00 	sts	0x006A, r24
		sec_tens = 5;
     d28:	85 e0       	ldi	r24, 0x05	; 5
     d2a:	80 93 6b 00 	sts	0x006B, r24
		min_unit = 9;
     d2e:	89 e0       	ldi	r24, 0x09	; 9
     d30:	80 93 6c 00 	sts	0x006C, r24
		min_tens--;
     d34:	80 91 6d 00 	lds	r24, 0x006D
     d38:	81 50       	subi	r24, 0x01	; 1
     d3a:	80 93 6d 00 	sts	0x006D, r24
	}
	if (sec_unit == -1 && sec_tens == 0 && min_unit == 0 && min_tens == 0
     d3e:	80 91 6a 00 	lds	r24, 0x006A
     d42:	8f 3f       	cpi	r24, 0xFF	; 255
     d44:	09 f5       	brne	.+66     	; 0xd88 <count_down+0xe6>
     d46:	80 91 6b 00 	lds	r24, 0x006B
     d4a:	88 23       	and	r24, r24
     d4c:	e9 f4       	brne	.+58     	; 0xd88 <count_down+0xe6>
     d4e:	80 91 6c 00 	lds	r24, 0x006C
     d52:	88 23       	and	r24, r24
     d54:	c9 f4       	brne	.+50     	; 0xd88 <count_down+0xe6>
     d56:	80 91 6d 00 	lds	r24, 0x006D
     d5a:	88 23       	and	r24, r24
     d5c:	a9 f4       	brne	.+42     	; 0xd88 <count_down+0xe6>
     d5e:	80 91 6e 00 	lds	r24, 0x006E
     d62:	88 23       	and	r24, r24
     d64:	89 f0       	breq	.+34     	; 0xd88 <count_down+0xe6>
			&& hour_unit != 0) {
		sec_unit = 9;
     d66:	89 e0       	ldi	r24, 0x09	; 9
     d68:	80 93 6a 00 	sts	0x006A, r24
		sec_tens = 5;
     d6c:	85 e0       	ldi	r24, 0x05	; 5
     d6e:	80 93 6b 00 	sts	0x006B, r24
		min_unit = 9;
     d72:	89 e0       	ldi	r24, 0x09	; 9
     d74:	80 93 6c 00 	sts	0x006C, r24
		min_tens = 5;
     d78:	85 e0       	ldi	r24, 0x05	; 5
     d7a:	80 93 6d 00 	sts	0x006D, r24
		hour_unit--;
     d7e:	80 91 6e 00 	lds	r24, 0x006E
     d82:	81 50       	subi	r24, 0x01	; 1
     d84:	80 93 6e 00 	sts	0x006E, r24
	}
	if (sec_unit == -1 && sec_tens == 0 && min_unit == 0 && min_tens == 0
     d88:	80 91 6a 00 	lds	r24, 0x006A
     d8c:	8f 3f       	cpi	r24, 0xFF	; 255
     d8e:	41 f5       	brne	.+80     	; 0xde0 <count_down+0x13e>
     d90:	80 91 6b 00 	lds	r24, 0x006B
     d94:	88 23       	and	r24, r24
     d96:	21 f5       	brne	.+72     	; 0xde0 <count_down+0x13e>
     d98:	80 91 6c 00 	lds	r24, 0x006C
     d9c:	88 23       	and	r24, r24
     d9e:	01 f5       	brne	.+64     	; 0xde0 <count_down+0x13e>
     da0:	80 91 6d 00 	lds	r24, 0x006D
     da4:	88 23       	and	r24, r24
     da6:	e1 f4       	brne	.+56     	; 0xde0 <count_down+0x13e>
     da8:	80 91 6e 00 	lds	r24, 0x006E
     dac:	88 23       	and	r24, r24
     dae:	c1 f4       	brne	.+48     	; 0xde0 <count_down+0x13e>
     db0:	80 91 6f 00 	lds	r24, 0x006F
     db4:	88 23       	and	r24, r24
     db6:	a1 f0       	breq	.+40     	; 0xde0 <count_down+0x13e>
			&& hour_unit == 0 && hour_tens != 0) {
		sec_unit = 9;
     db8:	89 e0       	ldi	r24, 0x09	; 9
     dba:	80 93 6a 00 	sts	0x006A, r24
		sec_tens = 5;
     dbe:	85 e0       	ldi	r24, 0x05	; 5
     dc0:	80 93 6b 00 	sts	0x006B, r24
		min_unit = 9;
     dc4:	89 e0       	ldi	r24, 0x09	; 9
     dc6:	80 93 6c 00 	sts	0x006C, r24
		min_tens = 5;
     dca:	85 e0       	ldi	r24, 0x05	; 5
     dcc:	80 93 6d 00 	sts	0x006D, r24
		hour_unit = 9;
     dd0:	89 e0       	ldi	r24, 0x09	; 9
     dd2:	80 93 6e 00 	sts	0x006E, r24
		hour_tens--;
     dd6:	80 91 6f 00 	lds	r24, 0x006F
     dda:	81 50       	subi	r24, 0x01	; 1
     ddc:	80 93 6f 00 	sts	0x006F, r24
	}
	if (sec_unit == 0 && sec_tens == 0 && min_unit == 0 && min_tens == 0
     de0:	80 91 6a 00 	lds	r24, 0x006A
     de4:	88 23       	and	r24, r24
     de6:	f1 f4       	brne	.+60     	; 0xe24 <count_down+0x182>
     de8:	80 91 6b 00 	lds	r24, 0x006B
     dec:	88 23       	and	r24, r24
     dee:	d1 f4       	brne	.+52     	; 0xe24 <count_down+0x182>
     df0:	80 91 6c 00 	lds	r24, 0x006C
     df4:	88 23       	and	r24, r24
     df6:	b1 f4       	brne	.+44     	; 0xe24 <count_down+0x182>
     df8:	80 91 6d 00 	lds	r24, 0x006D
     dfc:	88 23       	and	r24, r24
     dfe:	91 f4       	brne	.+36     	; 0xe24 <count_down+0x182>
     e00:	80 91 6e 00 	lds	r24, 0x006E
     e04:	88 23       	and	r24, r24
     e06:	71 f4       	brne	.+28     	; 0xe24 <count_down+0x182>
     e08:	80 91 6f 00 	lds	r24, 0x006F
     e0c:	88 23       	and	r24, r24
     e0e:	51 f4       	brne	.+20     	; 0xe24 <count_down+0x182>
			&& hour_unit == 0 && hour_tens == 0)

			{
		TIMSK &= ~(1 << OCIE1A);
     e10:	a9 e5       	ldi	r26, 0x59	; 89
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	e9 e5       	ldi	r30, 0x59	; 89
     e16:	f0 e0       	ldi	r31, 0x00	; 0
     e18:	80 81       	ld	r24, Z
     e1a:	8f 7e       	andi	r24, 0xEF	; 239
     e1c:	8c 93       	st	X, r24
		boundry=1;
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	80 93 70 00 	sts	0x0070, r24
	}
}
     e24:	cf 91       	pop	r28
     e26:	df 91       	pop	r29
     e28:	08 95       	ret

00000e2a <display>:

void display() {
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	c4 55       	subi	r28, 0x54	; 84
     e38:	d0 40       	sbci	r29, 0x00	; 0
     e3a:	0f b6       	in	r0, 0x3f	; 63
     e3c:	f8 94       	cli
     e3e:	de bf       	out	0x3e, r29	; 62
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	cd bf       	out	0x3d, r28	; 61
	PORTA = 0b00100000;
     e44:	eb e3       	ldi	r30, 0x3B	; 59
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 e2       	ldi	r24, 0x20	; 32
     e4a:	80 83       	st	Z, r24
	PORTC = sec_unit;
     e4c:	e5 e3       	ldi	r30, 0x35	; 53
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	80 91 6a 00 	lds	r24, 0x006A
     e54:	80 83       	st	Z, r24
     e56:	fe 01       	movw	r30, r28
     e58:	ef 5a       	subi	r30, 0xAF	; 175
     e5a:	ff 4f       	sbci	r31, 0xFF	; 255
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	a0 ea       	ldi	r26, 0xA0	; 160
     e62:	b0 e4       	ldi	r27, 0x40	; 64
     e64:	80 83       	st	Z, r24
     e66:	91 83       	std	Z+1, r25	; 0x01
     e68:	a2 83       	std	Z+2, r26	; 0x02
     e6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e6c:	8e 01       	movw	r16, r28
     e6e:	03 5b       	subi	r16, 0xB3	; 179
     e70:	1f 4f       	sbci	r17, 0xFF	; 255
     e72:	fe 01       	movw	r30, r28
     e74:	ef 5a       	subi	r30, 0xAF	; 175
     e76:	ff 4f       	sbci	r31, 0xFF	; 255
     e78:	60 81       	ld	r22, Z
     e7a:	71 81       	ldd	r23, Z+1	; 0x01
     e7c:	82 81       	ldd	r24, Z+2	; 0x02
     e7e:	93 81       	ldd	r25, Z+3	; 0x03
     e80:	20 e0       	ldi	r18, 0x00	; 0
     e82:	30 e0       	ldi	r19, 0x00	; 0
     e84:	4a e7       	ldi	r20, 0x7A	; 122
     e86:	55 e4       	ldi	r21, 0x45	; 69
     e88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e8c:	dc 01       	movw	r26, r24
     e8e:	cb 01       	movw	r24, r22
     e90:	f8 01       	movw	r30, r16
     e92:	80 83       	st	Z, r24
     e94:	91 83       	std	Z+1, r25	; 0x01
     e96:	a2 83       	std	Z+2, r26	; 0x02
     e98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e9a:	fe 01       	movw	r30, r28
     e9c:	e3 5b       	subi	r30, 0xB3	; 179
     e9e:	ff 4f       	sbci	r31, 0xFF	; 255
     ea0:	60 81       	ld	r22, Z
     ea2:	71 81       	ldd	r23, Z+1	; 0x01
     ea4:	82 81       	ldd	r24, Z+2	; 0x02
     ea6:	93 81       	ldd	r25, Z+3	; 0x03
     ea8:	20 e0       	ldi	r18, 0x00	; 0
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	40 e8       	ldi	r20, 0x80	; 128
     eae:	5f e3       	ldi	r21, 0x3F	; 63
     eb0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     eb4:	88 23       	and	r24, r24
     eb6:	44 f4       	brge	.+16     	; 0xec8 <display+0x9e>
		__ticks = 1;
     eb8:	fe 01       	movw	r30, r28
     eba:	e5 5b       	subi	r30, 0xB5	; 181
     ebc:	ff 4f       	sbci	r31, 0xFF	; 255
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	91 83       	std	Z+1, r25	; 0x01
     ec4:	80 83       	st	Z, r24
     ec6:	64 c0       	rjmp	.+200    	; 0xf90 <display+0x166>
	else if (__tmp > 65535)
     ec8:	fe 01       	movw	r30, r28
     eca:	e3 5b       	subi	r30, 0xB3	; 179
     ecc:	ff 4f       	sbci	r31, 0xFF	; 255
     ece:	60 81       	ld	r22, Z
     ed0:	71 81       	ldd	r23, Z+1	; 0x01
     ed2:	82 81       	ldd	r24, Z+2	; 0x02
     ed4:	93 81       	ldd	r25, Z+3	; 0x03
     ed6:	20 e0       	ldi	r18, 0x00	; 0
     ed8:	3f ef       	ldi	r19, 0xFF	; 255
     eda:	4f e7       	ldi	r20, 0x7F	; 127
     edc:	57 e4       	ldi	r21, 0x47	; 71
     ede:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ee2:	18 16       	cp	r1, r24
     ee4:	0c f0       	brlt	.+2      	; 0xee8 <display+0xbe>
     ee6:	43 c0       	rjmp	.+134    	; 0xf6e <display+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ee8:	fe 01       	movw	r30, r28
     eea:	ef 5a       	subi	r30, 0xAF	; 175
     eec:	ff 4f       	sbci	r31, 0xFF	; 255
     eee:	60 81       	ld	r22, Z
     ef0:	71 81       	ldd	r23, Z+1	; 0x01
     ef2:	82 81       	ldd	r24, Z+2	; 0x02
     ef4:	93 81       	ldd	r25, Z+3	; 0x03
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	40 e2       	ldi	r20, 0x20	; 32
     efc:	51 e4       	ldi	r21, 0x41	; 65
     efe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f02:	dc 01       	movw	r26, r24
     f04:	cb 01       	movw	r24, r22
     f06:	8e 01       	movw	r16, r28
     f08:	05 5b       	subi	r16, 0xB5	; 181
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
     f0c:	bc 01       	movw	r22, r24
     f0e:	cd 01       	movw	r24, r26
     f10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f14:	dc 01       	movw	r26, r24
     f16:	cb 01       	movw	r24, r22
     f18:	f8 01       	movw	r30, r16
     f1a:	91 83       	std	Z+1, r25	; 0x01
     f1c:	80 83       	st	Z, r24
     f1e:	1f c0       	rjmp	.+62     	; 0xf5e <display+0x134>
     f20:	fe 01       	movw	r30, r28
     f22:	e7 5b       	subi	r30, 0xB7	; 183
     f24:	ff 4f       	sbci	r31, 0xFF	; 255
     f26:	80 e9       	ldi	r24, 0x90	; 144
     f28:	91 e0       	ldi	r25, 0x01	; 1
     f2a:	91 83       	std	Z+1, r25	; 0x01
     f2c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f2e:	fe 01       	movw	r30, r28
     f30:	e7 5b       	subi	r30, 0xB7	; 183
     f32:	ff 4f       	sbci	r31, 0xFF	; 255
     f34:	80 81       	ld	r24, Z
     f36:	91 81       	ldd	r25, Z+1	; 0x01
     f38:	01 97       	sbiw	r24, 0x01	; 1
     f3a:	f1 f7       	brne	.-4      	; 0xf38 <display+0x10e>
     f3c:	fe 01       	movw	r30, r28
     f3e:	e7 5b       	subi	r30, 0xB7	; 183
     f40:	ff 4f       	sbci	r31, 0xFF	; 255
     f42:	91 83       	std	Z+1, r25	; 0x01
     f44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f46:	de 01       	movw	r26, r28
     f48:	a5 5b       	subi	r26, 0xB5	; 181
     f4a:	bf 4f       	sbci	r27, 0xFF	; 255
     f4c:	fe 01       	movw	r30, r28
     f4e:	e5 5b       	subi	r30, 0xB5	; 181
     f50:	ff 4f       	sbci	r31, 0xFF	; 255
     f52:	80 81       	ld	r24, Z
     f54:	91 81       	ldd	r25, Z+1	; 0x01
     f56:	01 97       	sbiw	r24, 0x01	; 1
     f58:	11 96       	adiw	r26, 0x01	; 1
     f5a:	9c 93       	st	X, r25
     f5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f5e:	fe 01       	movw	r30, r28
     f60:	e5 5b       	subi	r30, 0xB5	; 181
     f62:	ff 4f       	sbci	r31, 0xFF	; 255
     f64:	80 81       	ld	r24, Z
     f66:	91 81       	ldd	r25, Z+1	; 0x01
     f68:	00 97       	sbiw	r24, 0x00	; 0
     f6a:	d1 f6       	brne	.-76     	; 0xf20 <display+0xf6>
     f6c:	27 c0       	rjmp	.+78     	; 0xfbc <display+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f6e:	8e 01       	movw	r16, r28
     f70:	05 5b       	subi	r16, 0xB5	; 181
     f72:	1f 4f       	sbci	r17, 0xFF	; 255
     f74:	fe 01       	movw	r30, r28
     f76:	e3 5b       	subi	r30, 0xB3	; 179
     f78:	ff 4f       	sbci	r31, 0xFF	; 255
     f7a:	60 81       	ld	r22, Z
     f7c:	71 81       	ldd	r23, Z+1	; 0x01
     f7e:	82 81       	ldd	r24, Z+2	; 0x02
     f80:	93 81       	ldd	r25, Z+3	; 0x03
     f82:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f86:	dc 01       	movw	r26, r24
     f88:	cb 01       	movw	r24, r22
     f8a:	f8 01       	movw	r30, r16
     f8c:	91 83       	std	Z+1, r25	; 0x01
     f8e:	80 83       	st	Z, r24
     f90:	de 01       	movw	r26, r28
     f92:	a9 5b       	subi	r26, 0xB9	; 185
     f94:	bf 4f       	sbci	r27, 0xFF	; 255
     f96:	fe 01       	movw	r30, r28
     f98:	e5 5b       	subi	r30, 0xB5	; 181
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	8d 93       	st	X+, r24
     fa2:	9c 93       	st	X, r25
     fa4:	fe 01       	movw	r30, r28
     fa6:	e9 5b       	subi	r30, 0xB9	; 185
     fa8:	ff 4f       	sbci	r31, 0xFF	; 255
     faa:	80 81       	ld	r24, Z
     fac:	91 81       	ldd	r25, Z+1	; 0x01
     fae:	01 97       	sbiw	r24, 0x01	; 1
     fb0:	f1 f7       	brne	.-4      	; 0xfae <display+0x184>
     fb2:	fe 01       	movw	r30, r28
     fb4:	e9 5b       	subi	r30, 0xB9	; 185
     fb6:	ff 4f       	sbci	r31, 0xFF	; 255
     fb8:	91 83       	std	Z+1, r25	; 0x01
     fba:	80 83       	st	Z, r24
	_delay_ms(5);
	PORTA = 0b00000000;
     fbc:	eb e3       	ldi	r30, 0x3B	; 59
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	10 82       	st	Z, r1
	PORTA = 0b00010000;
     fc2:	eb e3       	ldi	r30, 0x3B	; 59
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	80 e1       	ldi	r24, 0x10	; 16
     fc8:	80 83       	st	Z, r24
	PORTC = sec_tens;
     fca:	e5 e3       	ldi	r30, 0x35	; 53
     fcc:	f0 e0       	ldi	r31, 0x00	; 0
     fce:	80 91 6b 00 	lds	r24, 0x006B
     fd2:	80 83       	st	Z, r24
     fd4:	fe 01       	movw	r30, r28
     fd6:	ed 5b       	subi	r30, 0xBD	; 189
     fd8:	ff 4f       	sbci	r31, 0xFF	; 255
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	a0 ea       	ldi	r26, 0xA0	; 160
     fe0:	b0 e4       	ldi	r27, 0x40	; 64
     fe2:	80 83       	st	Z, r24
     fe4:	91 83       	std	Z+1, r25	; 0x01
     fe6:	a2 83       	std	Z+2, r26	; 0x02
     fe8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fea:	8e 01       	movw	r16, r28
     fec:	01 5c       	subi	r16, 0xC1	; 193
     fee:	1f 4f       	sbci	r17, 0xFF	; 255
     ff0:	fe 01       	movw	r30, r28
     ff2:	ed 5b       	subi	r30, 0xBD	; 189
     ff4:	ff 4f       	sbci	r31, 0xFF	; 255
     ff6:	60 81       	ld	r22, Z
     ff8:	71 81       	ldd	r23, Z+1	; 0x01
     ffa:	82 81       	ldd	r24, Z+2	; 0x02
     ffc:	93 81       	ldd	r25, Z+3	; 0x03
     ffe:	20 e0       	ldi	r18, 0x00	; 0
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	4a e7       	ldi	r20, 0x7A	; 122
    1004:	55 e4       	ldi	r21, 0x45	; 69
    1006:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    100a:	dc 01       	movw	r26, r24
    100c:	cb 01       	movw	r24, r22
    100e:	f8 01       	movw	r30, r16
    1010:	80 83       	st	Z, r24
    1012:	91 83       	std	Z+1, r25	; 0x01
    1014:	a2 83       	std	Z+2, r26	; 0x02
    1016:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1018:	fe 01       	movw	r30, r28
    101a:	ff 96       	adiw	r30, 0x3f	; 63
    101c:	60 81       	ld	r22, Z
    101e:	71 81       	ldd	r23, Z+1	; 0x01
    1020:	82 81       	ldd	r24, Z+2	; 0x02
    1022:	93 81       	ldd	r25, Z+3	; 0x03
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	40 e8       	ldi	r20, 0x80	; 128
    102a:	5f e3       	ldi	r21, 0x3F	; 63
    102c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1030:	88 23       	and	r24, r24
    1032:	2c f4       	brge	.+10     	; 0x103e <display+0x214>
		__ticks = 1;
    1034:	81 e0       	ldi	r24, 0x01	; 1
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	9e af       	std	Y+62, r25	; 0x3e
    103a:	8d af       	std	Y+61, r24	; 0x3d
    103c:	46 c0       	rjmp	.+140    	; 0x10ca <display+0x2a0>
	else if (__tmp > 65535)
    103e:	fe 01       	movw	r30, r28
    1040:	ff 96       	adiw	r30, 0x3f	; 63
    1042:	60 81       	ld	r22, Z
    1044:	71 81       	ldd	r23, Z+1	; 0x01
    1046:	82 81       	ldd	r24, Z+2	; 0x02
    1048:	93 81       	ldd	r25, Z+3	; 0x03
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	3f ef       	ldi	r19, 0xFF	; 255
    104e:	4f e7       	ldi	r20, 0x7F	; 127
    1050:	57 e4       	ldi	r21, 0x47	; 71
    1052:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1056:	18 16       	cp	r1, r24
    1058:	64 f5       	brge	.+88     	; 0x10b2 <display+0x288>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    105a:	fe 01       	movw	r30, r28
    105c:	ed 5b       	subi	r30, 0xBD	; 189
    105e:	ff 4f       	sbci	r31, 0xFF	; 255
    1060:	60 81       	ld	r22, Z
    1062:	71 81       	ldd	r23, Z+1	; 0x01
    1064:	82 81       	ldd	r24, Z+2	; 0x02
    1066:	93 81       	ldd	r25, Z+3	; 0x03
    1068:	20 e0       	ldi	r18, 0x00	; 0
    106a:	30 e0       	ldi	r19, 0x00	; 0
    106c:	40 e2       	ldi	r20, 0x20	; 32
    106e:	51 e4       	ldi	r21, 0x41	; 65
    1070:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1074:	dc 01       	movw	r26, r24
    1076:	cb 01       	movw	r24, r22
    1078:	bc 01       	movw	r22, r24
    107a:	cd 01       	movw	r24, r26
    107c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1080:	dc 01       	movw	r26, r24
    1082:	cb 01       	movw	r24, r22
    1084:	9e af       	std	Y+62, r25	; 0x3e
    1086:	8d af       	std	Y+61, r24	; 0x3d
    1088:	0f c0       	rjmp	.+30     	; 0x10a8 <display+0x27e>
    108a:	80 e9       	ldi	r24, 0x90	; 144
    108c:	91 e0       	ldi	r25, 0x01	; 1
    108e:	9c af       	std	Y+60, r25	; 0x3c
    1090:	8b af       	std	Y+59, r24	; 0x3b
    1092:	8b ad       	ldd	r24, Y+59	; 0x3b
    1094:	9c ad       	ldd	r25, Y+60	; 0x3c
    1096:	01 97       	sbiw	r24, 0x01	; 1
    1098:	f1 f7       	brne	.-4      	; 0x1096 <display+0x26c>
    109a:	9c af       	std	Y+60, r25	; 0x3c
    109c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    109e:	8d ad       	ldd	r24, Y+61	; 0x3d
    10a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    10a2:	01 97       	sbiw	r24, 0x01	; 1
    10a4:	9e af       	std	Y+62, r25	; 0x3e
    10a6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    10aa:	9e ad       	ldd	r25, Y+62	; 0x3e
    10ac:	00 97       	sbiw	r24, 0x00	; 0
    10ae:	69 f7       	brne	.-38     	; 0x108a <display+0x260>
    10b0:	16 c0       	rjmp	.+44     	; 0x10de <display+0x2b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10b2:	fe 01       	movw	r30, r28
    10b4:	ff 96       	adiw	r30, 0x3f	; 63
    10b6:	60 81       	ld	r22, Z
    10b8:	71 81       	ldd	r23, Z+1	; 0x01
    10ba:	82 81       	ldd	r24, Z+2	; 0x02
    10bc:	93 81       	ldd	r25, Z+3	; 0x03
    10be:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10c2:	dc 01       	movw	r26, r24
    10c4:	cb 01       	movw	r24, r22
    10c6:	9e af       	std	Y+62, r25	; 0x3e
    10c8:	8d af       	std	Y+61, r24	; 0x3d
    10ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    10cc:	9e ad       	ldd	r25, Y+62	; 0x3e
    10ce:	9a af       	std	Y+58, r25	; 0x3a
    10d0:	89 af       	std	Y+57, r24	; 0x39
    10d2:	89 ad       	ldd	r24, Y+57	; 0x39
    10d4:	9a ad       	ldd	r25, Y+58	; 0x3a
    10d6:	01 97       	sbiw	r24, 0x01	; 1
    10d8:	f1 f7       	brne	.-4      	; 0x10d6 <display+0x2ac>
    10da:	9a af       	std	Y+58, r25	; 0x3a
    10dc:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(5);
	PORTA = 0b00000000;
    10de:	eb e3       	ldi	r30, 0x3B	; 59
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	10 82       	st	Z, r1
	PORTA = 0b00001000;
    10e4:	eb e3       	ldi	r30, 0x3B	; 59
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	88 e0       	ldi	r24, 0x08	; 8
    10ea:	80 83       	st	Z, r24

	PORTC = min_unit;
    10ec:	e5 e3       	ldi	r30, 0x35	; 53
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 91 6c 00 	lds	r24, 0x006C
    10f4:	80 83       	st	Z, r24
    10f6:	80 e0       	ldi	r24, 0x00	; 0
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	a0 ea       	ldi	r26, 0xA0	; 160
    10fc:	b0 e4       	ldi	r27, 0x40	; 64
    10fe:	8d ab       	std	Y+53, r24	; 0x35
    1100:	9e ab       	std	Y+54, r25	; 0x36
    1102:	af ab       	std	Y+55, r26	; 0x37
    1104:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1106:	6d a9       	ldd	r22, Y+53	; 0x35
    1108:	7e a9       	ldd	r23, Y+54	; 0x36
    110a:	8f a9       	ldd	r24, Y+55	; 0x37
    110c:	98 ad       	ldd	r25, Y+56	; 0x38
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	4a e7       	ldi	r20, 0x7A	; 122
    1114:	55 e4       	ldi	r21, 0x45	; 69
    1116:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
    111e:	89 ab       	std	Y+49, r24	; 0x31
    1120:	9a ab       	std	Y+50, r25	; 0x32
    1122:	ab ab       	std	Y+51, r26	; 0x33
    1124:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1126:	69 a9       	ldd	r22, Y+49	; 0x31
    1128:	7a a9       	ldd	r23, Y+50	; 0x32
    112a:	8b a9       	ldd	r24, Y+51	; 0x33
    112c:	9c a9       	ldd	r25, Y+52	; 0x34
    112e:	20 e0       	ldi	r18, 0x00	; 0
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	40 e8       	ldi	r20, 0x80	; 128
    1134:	5f e3       	ldi	r21, 0x3F	; 63
    1136:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    113a:	88 23       	and	r24, r24
    113c:	2c f4       	brge	.+10     	; 0x1148 <display+0x31e>
		__ticks = 1;
    113e:	81 e0       	ldi	r24, 0x01	; 1
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	98 ab       	std	Y+48, r25	; 0x30
    1144:	8f a7       	std	Y+47, r24	; 0x2f
    1146:	3f c0       	rjmp	.+126    	; 0x11c6 <display+0x39c>
	else if (__tmp > 65535)
    1148:	69 a9       	ldd	r22, Y+49	; 0x31
    114a:	7a a9       	ldd	r23, Y+50	; 0x32
    114c:	8b a9       	ldd	r24, Y+51	; 0x33
    114e:	9c a9       	ldd	r25, Y+52	; 0x34
    1150:	20 e0       	ldi	r18, 0x00	; 0
    1152:	3f ef       	ldi	r19, 0xFF	; 255
    1154:	4f e7       	ldi	r20, 0x7F	; 127
    1156:	57 e4       	ldi	r21, 0x47	; 71
    1158:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    115c:	18 16       	cp	r1, r24
    115e:	4c f5       	brge	.+82     	; 0x11b2 <display+0x388>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1160:	6d a9       	ldd	r22, Y+53	; 0x35
    1162:	7e a9       	ldd	r23, Y+54	; 0x36
    1164:	8f a9       	ldd	r24, Y+55	; 0x37
    1166:	98 ad       	ldd	r25, Y+56	; 0x38
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	40 e2       	ldi	r20, 0x20	; 32
    116e:	51 e4       	ldi	r21, 0x41	; 65
    1170:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1174:	dc 01       	movw	r26, r24
    1176:	cb 01       	movw	r24, r22
    1178:	bc 01       	movw	r22, r24
    117a:	cd 01       	movw	r24, r26
    117c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1180:	dc 01       	movw	r26, r24
    1182:	cb 01       	movw	r24, r22
    1184:	98 ab       	std	Y+48, r25	; 0x30
    1186:	8f a7       	std	Y+47, r24	; 0x2f
    1188:	0f c0       	rjmp	.+30     	; 0x11a8 <display+0x37e>
    118a:	80 e9       	ldi	r24, 0x90	; 144
    118c:	91 e0       	ldi	r25, 0x01	; 1
    118e:	9e a7       	std	Y+46, r25	; 0x2e
    1190:	8d a7       	std	Y+45, r24	; 0x2d
    1192:	8d a5       	ldd	r24, Y+45	; 0x2d
    1194:	9e a5       	ldd	r25, Y+46	; 0x2e
    1196:	01 97       	sbiw	r24, 0x01	; 1
    1198:	f1 f7       	brne	.-4      	; 0x1196 <display+0x36c>
    119a:	9e a7       	std	Y+46, r25	; 0x2e
    119c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    119e:	8f a5       	ldd	r24, Y+47	; 0x2f
    11a0:	98 a9       	ldd	r25, Y+48	; 0x30
    11a2:	01 97       	sbiw	r24, 0x01	; 1
    11a4:	98 ab       	std	Y+48, r25	; 0x30
    11a6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    11aa:	98 a9       	ldd	r25, Y+48	; 0x30
    11ac:	00 97       	sbiw	r24, 0x00	; 0
    11ae:	69 f7       	brne	.-38     	; 0x118a <display+0x360>
    11b0:	14 c0       	rjmp	.+40     	; 0x11da <display+0x3b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11b2:	69 a9       	ldd	r22, Y+49	; 0x31
    11b4:	7a a9       	ldd	r23, Y+50	; 0x32
    11b6:	8b a9       	ldd	r24, Y+51	; 0x33
    11b8:	9c a9       	ldd	r25, Y+52	; 0x34
    11ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11be:	dc 01       	movw	r26, r24
    11c0:	cb 01       	movw	r24, r22
    11c2:	98 ab       	std	Y+48, r25	; 0x30
    11c4:	8f a7       	std	Y+47, r24	; 0x2f
    11c6:	8f a5       	ldd	r24, Y+47	; 0x2f
    11c8:	98 a9       	ldd	r25, Y+48	; 0x30
    11ca:	9c a7       	std	Y+44, r25	; 0x2c
    11cc:	8b a7       	std	Y+43, r24	; 0x2b
    11ce:	8b a5       	ldd	r24, Y+43	; 0x2b
    11d0:	9c a5       	ldd	r25, Y+44	; 0x2c
    11d2:	01 97       	sbiw	r24, 0x01	; 1
    11d4:	f1 f7       	brne	.-4      	; 0x11d2 <display+0x3a8>
    11d6:	9c a7       	std	Y+44, r25	; 0x2c
    11d8:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(5);
	PORTA = 0b00000000;
    11da:	eb e3       	ldi	r30, 0x3B	; 59
    11dc:	f0 e0       	ldi	r31, 0x00	; 0
    11de:	10 82       	st	Z, r1
	PORTA = 0b00000100;
    11e0:	eb e3       	ldi	r30, 0x3B	; 59
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	84 e0       	ldi	r24, 0x04	; 4
    11e6:	80 83       	st	Z, r24
	PORTC = min_tens;
    11e8:	e5 e3       	ldi	r30, 0x35	; 53
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	80 91 6d 00 	lds	r24, 0x006D
    11f0:	80 83       	st	Z, r24
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	a0 ea       	ldi	r26, 0xA0	; 160
    11f8:	b0 e4       	ldi	r27, 0x40	; 64
    11fa:	8f a3       	std	Y+39, r24	; 0x27
    11fc:	98 a7       	std	Y+40, r25	; 0x28
    11fe:	a9 a7       	std	Y+41, r26	; 0x29
    1200:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1202:	6f a1       	ldd	r22, Y+39	; 0x27
    1204:	78 a5       	ldd	r23, Y+40	; 0x28
    1206:	89 a5       	ldd	r24, Y+41	; 0x29
    1208:	9a a5       	ldd	r25, Y+42	; 0x2a
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	4a e7       	ldi	r20, 0x7A	; 122
    1210:	55 e4       	ldi	r21, 0x45	; 69
    1212:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1216:	dc 01       	movw	r26, r24
    1218:	cb 01       	movw	r24, r22
    121a:	8b a3       	std	Y+35, r24	; 0x23
    121c:	9c a3       	std	Y+36, r25	; 0x24
    121e:	ad a3       	std	Y+37, r26	; 0x25
    1220:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1222:	6b a1       	ldd	r22, Y+35	; 0x23
    1224:	7c a1       	ldd	r23, Y+36	; 0x24
    1226:	8d a1       	ldd	r24, Y+37	; 0x25
    1228:	9e a1       	ldd	r25, Y+38	; 0x26
    122a:	20 e0       	ldi	r18, 0x00	; 0
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	40 e8       	ldi	r20, 0x80	; 128
    1230:	5f e3       	ldi	r21, 0x3F	; 63
    1232:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1236:	88 23       	and	r24, r24
    1238:	2c f4       	brge	.+10     	; 0x1244 <display+0x41a>
		__ticks = 1;
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	9a a3       	std	Y+34, r25	; 0x22
    1240:	89 a3       	std	Y+33, r24	; 0x21
    1242:	3f c0       	rjmp	.+126    	; 0x12c2 <display+0x498>
	else if (__tmp > 65535)
    1244:	6b a1       	ldd	r22, Y+35	; 0x23
    1246:	7c a1       	ldd	r23, Y+36	; 0x24
    1248:	8d a1       	ldd	r24, Y+37	; 0x25
    124a:	9e a1       	ldd	r25, Y+38	; 0x26
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	3f ef       	ldi	r19, 0xFF	; 255
    1250:	4f e7       	ldi	r20, 0x7F	; 127
    1252:	57 e4       	ldi	r21, 0x47	; 71
    1254:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1258:	18 16       	cp	r1, r24
    125a:	4c f5       	brge	.+82     	; 0x12ae <display+0x484>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    125c:	6f a1       	ldd	r22, Y+39	; 0x27
    125e:	78 a5       	ldd	r23, Y+40	; 0x28
    1260:	89 a5       	ldd	r24, Y+41	; 0x29
    1262:	9a a5       	ldd	r25, Y+42	; 0x2a
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	40 e2       	ldi	r20, 0x20	; 32
    126a:	51 e4       	ldi	r21, 0x41	; 65
    126c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	bc 01       	movw	r22, r24
    1276:	cd 01       	movw	r24, r26
    1278:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	9a a3       	std	Y+34, r25	; 0x22
    1282:	89 a3       	std	Y+33, r24	; 0x21
    1284:	0f c0       	rjmp	.+30     	; 0x12a4 <display+0x47a>
    1286:	80 e9       	ldi	r24, 0x90	; 144
    1288:	91 e0       	ldi	r25, 0x01	; 1
    128a:	98 a3       	std	Y+32, r25	; 0x20
    128c:	8f 8f       	std	Y+31, r24	; 0x1f
    128e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1290:	98 a1       	ldd	r25, Y+32	; 0x20
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	f1 f7       	brne	.-4      	; 0x1292 <display+0x468>
    1296:	98 a3       	std	Y+32, r25	; 0x20
    1298:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    129a:	89 a1       	ldd	r24, Y+33	; 0x21
    129c:	9a a1       	ldd	r25, Y+34	; 0x22
    129e:	01 97       	sbiw	r24, 0x01	; 1
    12a0:	9a a3       	std	Y+34, r25	; 0x22
    12a2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12a4:	89 a1       	ldd	r24, Y+33	; 0x21
    12a6:	9a a1       	ldd	r25, Y+34	; 0x22
    12a8:	00 97       	sbiw	r24, 0x00	; 0
    12aa:	69 f7       	brne	.-38     	; 0x1286 <display+0x45c>
    12ac:	14 c0       	rjmp	.+40     	; 0x12d6 <display+0x4ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ae:	6b a1       	ldd	r22, Y+35	; 0x23
    12b0:	7c a1       	ldd	r23, Y+36	; 0x24
    12b2:	8d a1       	ldd	r24, Y+37	; 0x25
    12b4:	9e a1       	ldd	r25, Y+38	; 0x26
    12b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    12ba:	dc 01       	movw	r26, r24
    12bc:	cb 01       	movw	r24, r22
    12be:	9a a3       	std	Y+34, r25	; 0x22
    12c0:	89 a3       	std	Y+33, r24	; 0x21
    12c2:	89 a1       	ldd	r24, Y+33	; 0x21
    12c4:	9a a1       	ldd	r25, Y+34	; 0x22
    12c6:	9e 8f       	std	Y+30, r25	; 0x1e
    12c8:	8d 8f       	std	Y+29, r24	; 0x1d
    12ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    12ce:	01 97       	sbiw	r24, 0x01	; 1
    12d0:	f1 f7       	brne	.-4      	; 0x12ce <display+0x4a4>
    12d2:	9e 8f       	std	Y+30, r25	; 0x1e
    12d4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);
	PORTA = 0b00000000;
    12d6:	eb e3       	ldi	r30, 0x3B	; 59
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	10 82       	st	Z, r1
	PORTA = 0b00000010;
    12dc:	eb e3       	ldi	r30, 0x3B	; 59
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	82 e0       	ldi	r24, 0x02	; 2
    12e2:	80 83       	st	Z, r24
	PORTC = hour_unit;
    12e4:	e5 e3       	ldi	r30, 0x35	; 53
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	80 91 6e 00 	lds	r24, 0x006E
    12ec:	80 83       	st	Z, r24
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	a0 ea       	ldi	r26, 0xA0	; 160
    12f4:	b0 e4       	ldi	r27, 0x40	; 64
    12f6:	89 8f       	std	Y+25, r24	; 0x19
    12f8:	9a 8f       	std	Y+26, r25	; 0x1a
    12fa:	ab 8f       	std	Y+27, r26	; 0x1b
    12fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12fe:	69 8d       	ldd	r22, Y+25	; 0x19
    1300:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1302:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1304:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	4a e7       	ldi	r20, 0x7A	; 122
    130c:	55 e4       	ldi	r21, 0x45	; 69
    130e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	8d 8b       	std	Y+21, r24	; 0x15
    1318:	9e 8b       	std	Y+22, r25	; 0x16
    131a:	af 8b       	std	Y+23, r26	; 0x17
    131c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    131e:	6d 89       	ldd	r22, Y+21	; 0x15
    1320:	7e 89       	ldd	r23, Y+22	; 0x16
    1322:	8f 89       	ldd	r24, Y+23	; 0x17
    1324:	98 8d       	ldd	r25, Y+24	; 0x18
    1326:	20 e0       	ldi	r18, 0x00	; 0
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	40 e8       	ldi	r20, 0x80	; 128
    132c:	5f e3       	ldi	r21, 0x3F	; 63
    132e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1332:	88 23       	and	r24, r24
    1334:	2c f4       	brge	.+10     	; 0x1340 <display+0x516>
		__ticks = 1;
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	9c 8b       	std	Y+20, r25	; 0x14
    133c:	8b 8b       	std	Y+19, r24	; 0x13
    133e:	3f c0       	rjmp	.+126    	; 0x13be <display+0x594>
	else if (__tmp > 65535)
    1340:	6d 89       	ldd	r22, Y+21	; 0x15
    1342:	7e 89       	ldd	r23, Y+22	; 0x16
    1344:	8f 89       	ldd	r24, Y+23	; 0x17
    1346:	98 8d       	ldd	r25, Y+24	; 0x18
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	3f ef       	ldi	r19, 0xFF	; 255
    134c:	4f e7       	ldi	r20, 0x7F	; 127
    134e:	57 e4       	ldi	r21, 0x47	; 71
    1350:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1354:	18 16       	cp	r1, r24
    1356:	4c f5       	brge	.+82     	; 0x13aa <display+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1358:	69 8d       	ldd	r22, Y+25	; 0x19
    135a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    135c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    135e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	40 e2       	ldi	r20, 0x20	; 32
    1366:	51 e4       	ldi	r21, 0x41	; 65
    1368:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    136c:	dc 01       	movw	r26, r24
    136e:	cb 01       	movw	r24, r22
    1370:	bc 01       	movw	r22, r24
    1372:	cd 01       	movw	r24, r26
    1374:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1378:	dc 01       	movw	r26, r24
    137a:	cb 01       	movw	r24, r22
    137c:	9c 8b       	std	Y+20, r25	; 0x14
    137e:	8b 8b       	std	Y+19, r24	; 0x13
    1380:	0f c0       	rjmp	.+30     	; 0x13a0 <display+0x576>
    1382:	80 e9       	ldi	r24, 0x90	; 144
    1384:	91 e0       	ldi	r25, 0x01	; 1
    1386:	9a 8b       	std	Y+18, r25	; 0x12
    1388:	89 8b       	std	Y+17, r24	; 0x11
    138a:	89 89       	ldd	r24, Y+17	; 0x11
    138c:	9a 89       	ldd	r25, Y+18	; 0x12
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	f1 f7       	brne	.-4      	; 0x138e <display+0x564>
    1392:	9a 8b       	std	Y+18, r25	; 0x12
    1394:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1396:	8b 89       	ldd	r24, Y+19	; 0x13
    1398:	9c 89       	ldd	r25, Y+20	; 0x14
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	9c 8b       	std	Y+20, r25	; 0x14
    139e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a0:	8b 89       	ldd	r24, Y+19	; 0x13
    13a2:	9c 89       	ldd	r25, Y+20	; 0x14
    13a4:	00 97       	sbiw	r24, 0x00	; 0
    13a6:	69 f7       	brne	.-38     	; 0x1382 <display+0x558>
    13a8:	14 c0       	rjmp	.+40     	; 0x13d2 <display+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13aa:	6d 89       	ldd	r22, Y+21	; 0x15
    13ac:	7e 89       	ldd	r23, Y+22	; 0x16
    13ae:	8f 89       	ldd	r24, Y+23	; 0x17
    13b0:	98 8d       	ldd	r25, Y+24	; 0x18
    13b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13b6:	dc 01       	movw	r26, r24
    13b8:	cb 01       	movw	r24, r22
    13ba:	9c 8b       	std	Y+20, r25	; 0x14
    13bc:	8b 8b       	std	Y+19, r24	; 0x13
    13be:	8b 89       	ldd	r24, Y+19	; 0x13
    13c0:	9c 89       	ldd	r25, Y+20	; 0x14
    13c2:	98 8b       	std	Y+16, r25	; 0x10
    13c4:	8f 87       	std	Y+15, r24	; 0x0f
    13c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    13c8:	98 89       	ldd	r25, Y+16	; 0x10
    13ca:	01 97       	sbiw	r24, 0x01	; 1
    13cc:	f1 f7       	brne	.-4      	; 0x13ca <display+0x5a0>
    13ce:	98 8b       	std	Y+16, r25	; 0x10
    13d0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);
	PORTA = 0b00000000;
    13d2:	eb e3       	ldi	r30, 0x3B	; 59
    13d4:	f0 e0       	ldi	r31, 0x00	; 0
    13d6:	10 82       	st	Z, r1
	PORTA = 0b00000001;
    13d8:	eb e3       	ldi	r30, 0x3B	; 59
    13da:	f0 e0       	ldi	r31, 0x00	; 0
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	80 83       	st	Z, r24
	PORTC = hour_tens;
    13e0:	e5 e3       	ldi	r30, 0x35	; 53
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	80 91 6f 00 	lds	r24, 0x006F
    13e8:	80 83       	st	Z, r24
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	a0 ea       	ldi	r26, 0xA0	; 160
    13f0:	b0 e4       	ldi	r27, 0x40	; 64
    13f2:	8b 87       	std	Y+11, r24	; 0x0b
    13f4:	9c 87       	std	Y+12, r25	; 0x0c
    13f6:	ad 87       	std	Y+13, r26	; 0x0d
    13f8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    13fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    13fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1400:	9e 85       	ldd	r25, Y+14	; 0x0e
    1402:	20 e0       	ldi	r18, 0x00	; 0
    1404:	30 e0       	ldi	r19, 0x00	; 0
    1406:	4a e7       	ldi	r20, 0x7A	; 122
    1408:	55 e4       	ldi	r21, 0x45	; 69
    140a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	8f 83       	std	Y+7, r24	; 0x07
    1414:	98 87       	std	Y+8, r25	; 0x08
    1416:	a9 87       	std	Y+9, r26	; 0x09
    1418:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    141a:	6f 81       	ldd	r22, Y+7	; 0x07
    141c:	78 85       	ldd	r23, Y+8	; 0x08
    141e:	89 85       	ldd	r24, Y+9	; 0x09
    1420:	9a 85       	ldd	r25, Y+10	; 0x0a
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	40 e8       	ldi	r20, 0x80	; 128
    1428:	5f e3       	ldi	r21, 0x3F	; 63
    142a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    142e:	88 23       	and	r24, r24
    1430:	2c f4       	brge	.+10     	; 0x143c <display+0x612>
		__ticks = 1;
    1432:	81 e0       	ldi	r24, 0x01	; 1
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	9e 83       	std	Y+6, r25	; 0x06
    1438:	8d 83       	std	Y+5, r24	; 0x05
    143a:	3f c0       	rjmp	.+126    	; 0x14ba <display+0x690>
	else if (__tmp > 65535)
    143c:	6f 81       	ldd	r22, Y+7	; 0x07
    143e:	78 85       	ldd	r23, Y+8	; 0x08
    1440:	89 85       	ldd	r24, Y+9	; 0x09
    1442:	9a 85       	ldd	r25, Y+10	; 0x0a
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	3f ef       	ldi	r19, 0xFF	; 255
    1448:	4f e7       	ldi	r20, 0x7F	; 127
    144a:	57 e4       	ldi	r21, 0x47	; 71
    144c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1450:	18 16       	cp	r1, r24
    1452:	4c f5       	brge	.+82     	; 0x14a6 <display+0x67c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1454:	6b 85       	ldd	r22, Y+11	; 0x0b
    1456:	7c 85       	ldd	r23, Y+12	; 0x0c
    1458:	8d 85       	ldd	r24, Y+13	; 0x0d
    145a:	9e 85       	ldd	r25, Y+14	; 0x0e
    145c:	20 e0       	ldi	r18, 0x00	; 0
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	40 e2       	ldi	r20, 0x20	; 32
    1462:	51 e4       	ldi	r21, 0x41	; 65
    1464:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	bc 01       	movw	r22, r24
    146e:	cd 01       	movw	r24, r26
    1470:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1474:	dc 01       	movw	r26, r24
    1476:	cb 01       	movw	r24, r22
    1478:	9e 83       	std	Y+6, r25	; 0x06
    147a:	8d 83       	std	Y+5, r24	; 0x05
    147c:	0f c0       	rjmp	.+30     	; 0x149c <display+0x672>
    147e:	80 e9       	ldi	r24, 0x90	; 144
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	9c 83       	std	Y+4, r25	; 0x04
    1484:	8b 83       	std	Y+3, r24	; 0x03
    1486:	8b 81       	ldd	r24, Y+3	; 0x03
    1488:	9c 81       	ldd	r25, Y+4	; 0x04
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	f1 f7       	brne	.-4      	; 0x148a <display+0x660>
    148e:	9c 83       	std	Y+4, r25	; 0x04
    1490:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1492:	8d 81       	ldd	r24, Y+5	; 0x05
    1494:	9e 81       	ldd	r25, Y+6	; 0x06
    1496:	01 97       	sbiw	r24, 0x01	; 1
    1498:	9e 83       	std	Y+6, r25	; 0x06
    149a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    149c:	8d 81       	ldd	r24, Y+5	; 0x05
    149e:	9e 81       	ldd	r25, Y+6	; 0x06
    14a0:	00 97       	sbiw	r24, 0x00	; 0
    14a2:	69 f7       	brne	.-38     	; 0x147e <display+0x654>
    14a4:	14 c0       	rjmp	.+40     	; 0x14ce <display+0x6a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14a6:	6f 81       	ldd	r22, Y+7	; 0x07
    14a8:	78 85       	ldd	r23, Y+8	; 0x08
    14aa:	89 85       	ldd	r24, Y+9	; 0x09
    14ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14b2:	dc 01       	movw	r26, r24
    14b4:	cb 01       	movw	r24, r22
    14b6:	9e 83       	std	Y+6, r25	; 0x06
    14b8:	8d 83       	std	Y+5, r24	; 0x05
    14ba:	8d 81       	ldd	r24, Y+5	; 0x05
    14bc:	9e 81       	ldd	r25, Y+6	; 0x06
    14be:	9a 83       	std	Y+2, r25	; 0x02
    14c0:	89 83       	std	Y+1, r24	; 0x01
    14c2:	89 81       	ldd	r24, Y+1	; 0x01
    14c4:	9a 81       	ldd	r25, Y+2	; 0x02
    14c6:	01 97       	sbiw	r24, 0x01	; 1
    14c8:	f1 f7       	brne	.-4      	; 0x14c6 <display+0x69c>
    14ca:	9a 83       	std	Y+2, r25	; 0x02
    14cc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
	PORTA = 0b00000000;
    14ce:	eb e3       	ldi	r30, 0x3B	; 59
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	10 82       	st	Z, r1
}
    14d4:	cc 5a       	subi	r28, 0xAC	; 172
    14d6:	df 4f       	sbci	r29, 0xFF	; 255
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	f8 94       	cli
    14dc:	de bf       	out	0x3e, r29	; 62
    14de:	0f be       	out	0x3f, r0	; 63
    14e0:	cd bf       	out	0x3d, r28	; 61
    14e2:	cf 91       	pop	r28
    14e4:	df 91       	pop	r29
    14e6:	1f 91       	pop	r17
    14e8:	0f 91       	pop	r16
    14ea:	08 95       	ret

000014ec <timer1_init>:

void timer1_init() {
    14ec:	df 93       	push	r29
    14ee:	cf 93       	push	r28
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62
	// Set CTC mode
	TCCR1B |= (1 << WGM12);
    14f4:	ae e4       	ldi	r26, 0x4E	; 78
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	ee e4       	ldi	r30, 0x4E	; 78
    14fa:	f0 e0       	ldi	r31, 0x00	; 0
    14fc:	80 81       	ld	r24, Z
    14fe:	88 60       	ori	r24, 0x08	; 8
    1500:	8c 93       	st	X, r24

	// Set compare value
	OCR1A = 15625;
    1502:	ea e4       	ldi	r30, 0x4A	; 74
    1504:	f0 e0       	ldi	r31, 0x00	; 0
    1506:	89 e0       	ldi	r24, 0x09	; 9
    1508:	9d e3       	ldi	r25, 0x3D	; 61
    150a:	91 83       	std	Z+1, r25	; 0x01
    150c:	80 83       	st	Z, r24

	// Set prescaler to 1024
	TCCR1B |= (1 << CS12) | (1 << CS10);
    150e:	ae e4       	ldi	r26, 0x4E	; 78
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	ee e4       	ldi	r30, 0x4E	; 78
    1514:	f0 e0       	ldi	r31, 0x00	; 0
    1516:	80 81       	ld	r24, Z
    1518:	85 60       	ori	r24, 0x05	; 5
    151a:	8c 93       	st	X, r24

	// Enable Output Compare A Match Interrupt
	TIMSK |= (1 << OCIE1A);
    151c:	a9 e5       	ldi	r26, 0x59	; 89
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	e9 e5       	ldi	r30, 0x59	; 89
    1522:	f0 e0       	ldi	r31, 0x00	; 0
    1524:	80 81       	ld	r24, Z
    1526:	80 61       	ori	r24, 0x10	; 16
    1528:	8c 93       	st	X, r24

	// Enable global interrupts
	SREG |= (1 << 7);
    152a:	af e5       	ldi	r26, 0x5F	; 95
    152c:	b0 e0       	ldi	r27, 0x00	; 0
    152e:	ef e5       	ldi	r30, 0x5F	; 95
    1530:	f0 e0       	ldi	r31, 0x00	; 0
    1532:	80 81       	ld	r24, Z
    1534:	80 68       	ori	r24, 0x80	; 128
    1536:	8c 93       	st	X, r24

}
    1538:	cf 91       	pop	r28
    153a:	df 91       	pop	r29
    153c:	08 95       	ret

0000153e <__vector_7>:

ISR(TIMER1_COMPA_vect) {
    153e:	1f 92       	push	r1
    1540:	0f 92       	push	r0
    1542:	0f b6       	in	r0, 0x3f	; 63
    1544:	0f 92       	push	r0
    1546:	11 24       	eor	r1, r1
    1548:	2f 93       	push	r18
    154a:	3f 93       	push	r19
    154c:	4f 93       	push	r20
    154e:	5f 93       	push	r21
    1550:	6f 93       	push	r22
    1552:	7f 93       	push	r23
    1554:	8f 93       	push	r24
    1556:	9f 93       	push	r25
    1558:	af 93       	push	r26
    155a:	bf 93       	push	r27
    155c:	ef 93       	push	r30
    155e:	ff 93       	push	r31
    1560:	df 93       	push	r29
    1562:	cf 93       	push	r28
    1564:	cd b7       	in	r28, 0x3d	; 61
    1566:	de b7       	in	r29, 0x3e	; 62
	if (mode)
    1568:	80 91 68 00 	lds	r24, 0x0068
    156c:	88 23       	and	r24, r24
    156e:	19 f0       	breq	.+6      	; 0x1576 <__vector_7+0x38>
		count_up();
    1570:	0e 94 d4 05 	call	0xba8	; 0xba8 <count_up>
    1574:	02 c0       	rjmp	.+4      	; 0x157a <__vector_7+0x3c>
	else
		count_down();
    1576:	0e 94 51 06 	call	0xca2	; 0xca2 <count_down>
}
    157a:	cf 91       	pop	r28
    157c:	df 91       	pop	r29
    157e:	ff 91       	pop	r31
    1580:	ef 91       	pop	r30
    1582:	bf 91       	pop	r27
    1584:	af 91       	pop	r26
    1586:	9f 91       	pop	r25
    1588:	8f 91       	pop	r24
    158a:	7f 91       	pop	r23
    158c:	6f 91       	pop	r22
    158e:	5f 91       	pop	r21
    1590:	4f 91       	pop	r20
    1592:	3f 91       	pop	r19
    1594:	2f 91       	pop	r18
    1596:	0f 90       	pop	r0
    1598:	0f be       	out	0x3f, r0	; 63
    159a:	0f 90       	pop	r0
    159c:	1f 90       	pop	r1
    159e:	18 95       	reti

000015a0 <pause>:

void pause() {
    15a0:	df 93       	push	r29
    15a2:	cf 93       	push	r28
    15a4:	cd b7       	in	r28, 0x3d	; 61
    15a6:	de b7       	in	r29, 0x3e	; 62
	MCUCR |= (1 << ISC11) | (1 << ISC10);
    15a8:	a5 e5       	ldi	r26, 0x55	; 85
    15aa:	b0 e0       	ldi	r27, 0x00	; 0
    15ac:	e5 e5       	ldi	r30, 0x55	; 85
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 81       	ld	r24, Z
    15b2:	8c 60       	ori	r24, 0x0C	; 12
    15b4:	8c 93       	st	X, r24
	GICR |= (1 << INT1);            //enable
    15b6:	ab e5       	ldi	r26, 0x5B	; 91
    15b8:	b0 e0       	ldi	r27, 0x00	; 0
    15ba:	eb e5       	ldi	r30, 0x5B	; 91
    15bc:	f0 e0       	ldi	r31, 0x00	; 0
    15be:	80 81       	ld	r24, Z
    15c0:	80 68       	ori	r24, 0x80	; 128
    15c2:	8c 93       	st	X, r24
	SREG |= (1 << 7);
    15c4:	af e5       	ldi	r26, 0x5F	; 95
    15c6:	b0 e0       	ldi	r27, 0x00	; 0
    15c8:	ef e5       	ldi	r30, 0x5F	; 95
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	80 81       	ld	r24, Z
    15ce:	80 68       	ori	r24, 0x80	; 128
    15d0:	8c 93       	st	X, r24
	DDRD &= ~(1 << 3);
    15d2:	a1 e3       	ldi	r26, 0x31	; 49
    15d4:	b0 e0       	ldi	r27, 0x00	; 0
    15d6:	e1 e3       	ldi	r30, 0x31	; 49
    15d8:	f0 e0       	ldi	r31, 0x00	; 0
    15da:	80 81       	ld	r24, Z
    15dc:	87 7f       	andi	r24, 0xF7	; 247
    15de:	8c 93       	st	X, r24

}
    15e0:	cf 91       	pop	r28
    15e2:	df 91       	pop	r29
    15e4:	08 95       	ret

000015e6 <__vector_2>:
ISR(INT1_vect) {                      //pause
    15e6:	1f 92       	push	r1
    15e8:	0f 92       	push	r0
    15ea:	0f b6       	in	r0, 0x3f	; 63
    15ec:	0f 92       	push	r0
    15ee:	11 24       	eor	r1, r1
    15f0:	2f 93       	push	r18
    15f2:	3f 93       	push	r19
    15f4:	4f 93       	push	r20
    15f6:	5f 93       	push	r21
    15f8:	6f 93       	push	r22
    15fa:	7f 93       	push	r23
    15fc:	8f 93       	push	r24
    15fe:	9f 93       	push	r25
    1600:	af 93       	push	r26
    1602:	bf 93       	push	r27
    1604:	ef 93       	push	r30
    1606:	ff 93       	push	r31
    1608:	df 93       	push	r29
    160a:	cf 93       	push	r28
    160c:	cd b7       	in	r28, 0x3d	; 61
    160e:	de b7       	in	r29, 0x3e	; 62
    1610:	2e 97       	sbiw	r28, 0x0e	; 14
    1612:	de bf       	out	0x3e, r29	; 62
    1614:	cd bf       	out	0x3d, r28	; 61

	// disable Output Compare A Match Interrupt
	TIMSK &= ~(1 << OCIE1A);
    1616:	a9 e5       	ldi	r26, 0x59	; 89
    1618:	b0 e0       	ldi	r27, 0x00	; 0
    161a:	e9 e5       	ldi	r30, 0x59	; 89
    161c:	f0 e0       	ldi	r31, 0x00	; 0
    161e:	80 81       	ld	r24, Z
    1620:	8f 7e       	andi	r24, 0xEF	; 239
    1622:	8c 93       	st	X, r24
    1624:	80 e0       	ldi	r24, 0x00	; 0
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	a8 e4       	ldi	r26, 0x48	; 72
    162a:	b2 e4       	ldi	r27, 0x42	; 66
    162c:	8b 87       	std	Y+11, r24	; 0x0b
    162e:	9c 87       	std	Y+12, r25	; 0x0c
    1630:	ad 87       	std	Y+13, r26	; 0x0d
    1632:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1634:	6b 85       	ldd	r22, Y+11	; 0x0b
    1636:	7c 85       	ldd	r23, Y+12	; 0x0c
    1638:	8d 85       	ldd	r24, Y+13	; 0x0d
    163a:	9e 85       	ldd	r25, Y+14	; 0x0e
    163c:	20 e0       	ldi	r18, 0x00	; 0
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	4a e7       	ldi	r20, 0x7A	; 122
    1642:	55 e4       	ldi	r21, 0x45	; 69
    1644:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1648:	dc 01       	movw	r26, r24
    164a:	cb 01       	movw	r24, r22
    164c:	8f 83       	std	Y+7, r24	; 0x07
    164e:	98 87       	std	Y+8, r25	; 0x08
    1650:	a9 87       	std	Y+9, r26	; 0x09
    1652:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1654:	6f 81       	ldd	r22, Y+7	; 0x07
    1656:	78 85       	ldd	r23, Y+8	; 0x08
    1658:	89 85       	ldd	r24, Y+9	; 0x09
    165a:	9a 85       	ldd	r25, Y+10	; 0x0a
    165c:	20 e0       	ldi	r18, 0x00	; 0
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	40 e8       	ldi	r20, 0x80	; 128
    1662:	5f e3       	ldi	r21, 0x3F	; 63
    1664:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1668:	88 23       	and	r24, r24
    166a:	2c f4       	brge	.+10     	; 0x1676 <__vector_2+0x90>
		__ticks = 1;
    166c:	81 e0       	ldi	r24, 0x01	; 1
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	9e 83       	std	Y+6, r25	; 0x06
    1672:	8d 83       	std	Y+5, r24	; 0x05
    1674:	3f c0       	rjmp	.+126    	; 0x16f4 <__vector_2+0x10e>
	else if (__tmp > 65535)
    1676:	6f 81       	ldd	r22, Y+7	; 0x07
    1678:	78 85       	ldd	r23, Y+8	; 0x08
    167a:	89 85       	ldd	r24, Y+9	; 0x09
    167c:	9a 85       	ldd	r25, Y+10	; 0x0a
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	3f ef       	ldi	r19, 0xFF	; 255
    1682:	4f e7       	ldi	r20, 0x7F	; 127
    1684:	57 e4       	ldi	r21, 0x47	; 71
    1686:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    168a:	18 16       	cp	r1, r24
    168c:	4c f5       	brge	.+82     	; 0x16e0 <__vector_2+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    168e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1690:	7c 85       	ldd	r23, Y+12	; 0x0c
    1692:	8d 85       	ldd	r24, Y+13	; 0x0d
    1694:	9e 85       	ldd	r25, Y+14	; 0x0e
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	40 e2       	ldi	r20, 0x20	; 32
    169c:	51 e4       	ldi	r21, 0x41	; 65
    169e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16a2:	dc 01       	movw	r26, r24
    16a4:	cb 01       	movw	r24, r22
    16a6:	bc 01       	movw	r22, r24
    16a8:	cd 01       	movw	r24, r26
    16aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16ae:	dc 01       	movw	r26, r24
    16b0:	cb 01       	movw	r24, r22
    16b2:	9e 83       	std	Y+6, r25	; 0x06
    16b4:	8d 83       	std	Y+5, r24	; 0x05
    16b6:	0f c0       	rjmp	.+30     	; 0x16d6 <__vector_2+0xf0>
    16b8:	80 e9       	ldi	r24, 0x90	; 144
    16ba:	91 e0       	ldi	r25, 0x01	; 1
    16bc:	9c 83       	std	Y+4, r25	; 0x04
    16be:	8b 83       	std	Y+3, r24	; 0x03
    16c0:	8b 81       	ldd	r24, Y+3	; 0x03
    16c2:	9c 81       	ldd	r25, Y+4	; 0x04
    16c4:	01 97       	sbiw	r24, 0x01	; 1
    16c6:	f1 f7       	brne	.-4      	; 0x16c4 <__vector_2+0xde>
    16c8:	9c 83       	std	Y+4, r25	; 0x04
    16ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16cc:	8d 81       	ldd	r24, Y+5	; 0x05
    16ce:	9e 81       	ldd	r25, Y+6	; 0x06
    16d0:	01 97       	sbiw	r24, 0x01	; 1
    16d2:	9e 83       	std	Y+6, r25	; 0x06
    16d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16d6:	8d 81       	ldd	r24, Y+5	; 0x05
    16d8:	9e 81       	ldd	r25, Y+6	; 0x06
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	69 f7       	brne	.-38     	; 0x16b8 <__vector_2+0xd2>
    16de:	14 c0       	rjmp	.+40     	; 0x1708 <__vector_2+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16e0:	6f 81       	ldd	r22, Y+7	; 0x07
    16e2:	78 85       	ldd	r23, Y+8	; 0x08
    16e4:	89 85       	ldd	r24, Y+9	; 0x09
    16e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16ec:	dc 01       	movw	r26, r24
    16ee:	cb 01       	movw	r24, r22
    16f0:	9e 83       	std	Y+6, r25	; 0x06
    16f2:	8d 83       	std	Y+5, r24	; 0x05
    16f4:	8d 81       	ldd	r24, Y+5	; 0x05
    16f6:	9e 81       	ldd	r25, Y+6	; 0x06
    16f8:	9a 83       	std	Y+2, r25	; 0x02
    16fa:	89 83       	std	Y+1, r24	; 0x01
    16fc:	89 81       	ldd	r24, Y+1	; 0x01
    16fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1700:	01 97       	sbiw	r24, 0x01	; 1
    1702:	f1 f7       	brne	.-4      	; 0x1700 <__vector_2+0x11a>
    1704:	9a 83       	std	Y+2, r25	; 0x02
    1706:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(50);
}
    1708:	2e 96       	adiw	r28, 0x0e	; 14
    170a:	de bf       	out	0x3e, r29	; 62
    170c:	cd bf       	out	0x3d, r28	; 61
    170e:	cf 91       	pop	r28
    1710:	df 91       	pop	r29
    1712:	ff 91       	pop	r31
    1714:	ef 91       	pop	r30
    1716:	bf 91       	pop	r27
    1718:	af 91       	pop	r26
    171a:	9f 91       	pop	r25
    171c:	8f 91       	pop	r24
    171e:	7f 91       	pop	r23
    1720:	6f 91       	pop	r22
    1722:	5f 91       	pop	r21
    1724:	4f 91       	pop	r20
    1726:	3f 91       	pop	r19
    1728:	2f 91       	pop	r18
    172a:	0f 90       	pop	r0
    172c:	0f be       	out	0x3f, r0	; 63
    172e:	0f 90       	pop	r0
    1730:	1f 90       	pop	r1
    1732:	18 95       	reti

00001734 <resume>:

void resume() {
    1734:	df 93       	push	r29
    1736:	cf 93       	push	r28
    1738:	cd b7       	in	r28, 0x3d	; 61
    173a:	de b7       	in	r29, 0x3e	; 62
	GICR |= (1 << INT2);            //enable
    173c:	ab e5       	ldi	r26, 0x5B	; 91
    173e:	b0 e0       	ldi	r27, 0x00	; 0
    1740:	eb e5       	ldi	r30, 0x5B	; 91
    1742:	f0 e0       	ldi	r31, 0x00	; 0
    1744:	80 81       	ld	r24, Z
    1746:	80 62       	ori	r24, 0x20	; 32
    1748:	8c 93       	st	X, r24
	MCUCSR &= ~(1 << ISC2);      //int2 with falling edge
    174a:	a4 e5       	ldi	r26, 0x54	; 84
    174c:	b0 e0       	ldi	r27, 0x00	; 0
    174e:	e4 e5       	ldi	r30, 0x54	; 84
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	80 81       	ld	r24, Z
    1754:	8f 7b       	andi	r24, 0xBF	; 191
    1756:	8c 93       	st	X, r24
	SREG |= (1 << 7);
    1758:	af e5       	ldi	r26, 0x5F	; 95
    175a:	b0 e0       	ldi	r27, 0x00	; 0
    175c:	ef e5       	ldi	r30, 0x5F	; 95
    175e:	f0 e0       	ldi	r31, 0x00	; 0
    1760:	80 81       	ld	r24, Z
    1762:	80 68       	ori	r24, 0x80	; 128
    1764:	8c 93       	st	X, r24
	DDRB &= ~(1 << 2);
    1766:	a7 e3       	ldi	r26, 0x37	; 55
    1768:	b0 e0       	ldi	r27, 0x00	; 0
    176a:	e7 e3       	ldi	r30, 0x37	; 55
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	80 81       	ld	r24, Z
    1770:	8b 7f       	andi	r24, 0xFB	; 251
    1772:	8c 93       	st	X, r24
	PORTB |= (1 << 2);
    1774:	a8 e3       	ldi	r26, 0x38	; 56
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	e8 e3       	ldi	r30, 0x38	; 56
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	80 81       	ld	r24, Z
    177e:	84 60       	ori	r24, 0x04	; 4
    1780:	8c 93       	st	X, r24

}
    1782:	cf 91       	pop	r28
    1784:	df 91       	pop	r29
    1786:	08 95       	ret

00001788 <__vector_3>:

ISR(INT2_vect) {                      //resume
    1788:	1f 92       	push	r1
    178a:	0f 92       	push	r0
    178c:	0f b6       	in	r0, 0x3f	; 63
    178e:	0f 92       	push	r0
    1790:	11 24       	eor	r1, r1
    1792:	8f 93       	push	r24
    1794:	af 93       	push	r26
    1796:	bf 93       	push	r27
    1798:	ef 93       	push	r30
    179a:	ff 93       	push	r31
    179c:	df 93       	push	r29
    179e:	cf 93       	push	r28
    17a0:	cd b7       	in	r28, 0x3d	; 61
    17a2:	de b7       	in	r29, 0x3e	; 62

	// Enable Output Compare A Match Interrupt
	TIMSK |= (1 << OCIE1A);
    17a4:	a9 e5       	ldi	r26, 0x59	; 89
    17a6:	b0 e0       	ldi	r27, 0x00	; 0
    17a8:	e9 e5       	ldi	r30, 0x59	; 89
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	80 81       	ld	r24, Z
    17ae:	80 61       	ori	r24, 0x10	; 16
    17b0:	8c 93       	st	X, r24
}
    17b2:	cf 91       	pop	r28
    17b4:	df 91       	pop	r29
    17b6:	ff 91       	pop	r31
    17b8:	ef 91       	pop	r30
    17ba:	bf 91       	pop	r27
    17bc:	af 91       	pop	r26
    17be:	8f 91       	pop	r24
    17c0:	0f 90       	pop	r0
    17c2:	0f be       	out	0x3f, r0	; 63
    17c4:	0f 90       	pop	r0
    17c6:	1f 90       	pop	r1
    17c8:	18 95       	reti

000017ca <reset>:

void reset() {
    17ca:	df 93       	push	r29
    17cc:	cf 93       	push	r28
    17ce:	cd b7       	in	r28, 0x3d	; 61
    17d0:	de b7       	in	r29, 0x3e	; 62

	MCUCR |= (1 << ISC01) & ~(1 << ISC00);   //falling edge int0
    17d2:	a5 e5       	ldi	r26, 0x55	; 85
    17d4:	b0 e0       	ldi	r27, 0x00	; 0
    17d6:	e5 e5       	ldi	r30, 0x55	; 85
    17d8:	f0 e0       	ldi	r31, 0x00	; 0
    17da:	80 81       	ld	r24, Z
    17dc:	82 60       	ori	r24, 0x02	; 2
    17de:	8c 93       	st	X, r24
	GICR |= (1 << INT0);  //int0 enable
    17e0:	ab e5       	ldi	r26, 0x5B	; 91
    17e2:	b0 e0       	ldi	r27, 0x00	; 0
    17e4:	eb e5       	ldi	r30, 0x5B	; 91
    17e6:	f0 e0       	ldi	r31, 0x00	; 0
    17e8:	80 81       	ld	r24, Z
    17ea:	80 64       	ori	r24, 0x40	; 64
    17ec:	8c 93       	st	X, r24
	SREG |= (1 << 7);    // golbal interrubt enable
    17ee:	af e5       	ldi	r26, 0x5F	; 95
    17f0:	b0 e0       	ldi	r27, 0x00	; 0
    17f2:	ef e5       	ldi	r30, 0x5F	; 95
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	80 81       	ld	r24, Z
    17f8:	80 68       	ori	r24, 0x80	; 128
    17fa:	8c 93       	st	X, r24
	DDRD &= ~(1 << 2);   //pin input
    17fc:	a1 e3       	ldi	r26, 0x31	; 49
    17fe:	b0 e0       	ldi	r27, 0x00	; 0
    1800:	e1 e3       	ldi	r30, 0x31	; 49
    1802:	f0 e0       	ldi	r31, 0x00	; 0
    1804:	80 81       	ld	r24, Z
    1806:	8b 7f       	andi	r24, 0xFB	; 251
    1808:	8c 93       	st	X, r24
	PORTD |= (1 << 2);    //pull up resistor
    180a:	a2 e3       	ldi	r26, 0x32	; 50
    180c:	b0 e0       	ldi	r27, 0x00	; 0
    180e:	e2 e3       	ldi	r30, 0x32	; 50
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	80 81       	ld	r24, Z
    1814:	84 60       	ori	r24, 0x04	; 4
    1816:	8c 93       	st	X, r24
}
    1818:	cf 91       	pop	r28
    181a:	df 91       	pop	r29
    181c:	08 95       	ret

0000181e <__vector_1>:

ISR(INT0_vect) {
    181e:	1f 92       	push	r1
    1820:	0f 92       	push	r0
    1822:	0f b6       	in	r0, 0x3f	; 63
    1824:	0f 92       	push	r0
    1826:	11 24       	eor	r1, r1
    1828:	df 93       	push	r29
    182a:	cf 93       	push	r28
    182c:	cd b7       	in	r28, 0x3d	; 61
    182e:	de b7       	in	r29, 0x3e	; 62
	sec_unit = 0;
    1830:	10 92 6a 00 	sts	0x006A, r1
	sec_tens = 0;
    1834:	10 92 6b 00 	sts	0x006B, r1
	min_unit = 0;
    1838:	10 92 6c 00 	sts	0x006C, r1
	min_tens = 0;
    183c:	10 92 6d 00 	sts	0x006D, r1
	hour_unit = 0;
    1840:	10 92 6e 00 	sts	0x006E, r1
	hour_tens = 0;
    1844:	10 92 6f 00 	sts	0x006F, r1

}
    1848:	cf 91       	pop	r28
    184a:	df 91       	pop	r29
    184c:	0f 90       	pop	r0
    184e:	0f be       	out	0x3f, r0	; 63
    1850:	0f 90       	pop	r0
    1852:	1f 90       	pop	r1
    1854:	18 95       	reti

00001856 <RED_LED_ON>:

void RED_LED_ON() {                       //count up
    1856:	df 93       	push	r29
    1858:	cf 93       	push	r28
    185a:	cd b7       	in	r28, 0x3d	; 61
    185c:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1 << 4);
    185e:	a1 e3       	ldi	r26, 0x31	; 49
    1860:	b0 e0       	ldi	r27, 0x00	; 0
    1862:	e1 e3       	ldi	r30, 0x31	; 49
    1864:	f0 e0       	ldi	r31, 0x00	; 0
    1866:	80 81       	ld	r24, Z
    1868:	80 61       	ori	r24, 0x10	; 16
    186a:	8c 93       	st	X, r24
	PORTD |= (1 << 4);
    186c:	a2 e3       	ldi	r26, 0x32	; 50
    186e:	b0 e0       	ldi	r27, 0x00	; 0
    1870:	e2 e3       	ldi	r30, 0x32	; 50
    1872:	f0 e0       	ldi	r31, 0x00	; 0
    1874:	80 81       	ld	r24, Z
    1876:	80 61       	ori	r24, 0x10	; 16
    1878:	8c 93       	st	X, r24

}
    187a:	cf 91       	pop	r28
    187c:	df 91       	pop	r29
    187e:	08 95       	ret

00001880 <RED_LED_OFF>:

void RED_LED_OFF() {                       //count up
    1880:	df 93       	push	r29
    1882:	cf 93       	push	r28
    1884:	cd b7       	in	r28, 0x3d	; 61
    1886:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1 << 4);
    1888:	a1 e3       	ldi	r26, 0x31	; 49
    188a:	b0 e0       	ldi	r27, 0x00	; 0
    188c:	e1 e3       	ldi	r30, 0x31	; 49
    188e:	f0 e0       	ldi	r31, 0x00	; 0
    1890:	80 81       	ld	r24, Z
    1892:	80 61       	ori	r24, 0x10	; 16
    1894:	8c 93       	st	X, r24
	PORTD &= ~(1 << 4);
    1896:	a2 e3       	ldi	r26, 0x32	; 50
    1898:	b0 e0       	ldi	r27, 0x00	; 0
    189a:	e2 e3       	ldi	r30, 0x32	; 50
    189c:	f0 e0       	ldi	r31, 0x00	; 0
    189e:	80 81       	ld	r24, Z
    18a0:	8f 7e       	andi	r24, 0xEF	; 239
    18a2:	8c 93       	st	X, r24

}
    18a4:	cf 91       	pop	r28
    18a6:	df 91       	pop	r29
    18a8:	08 95       	ret

000018aa <YELLOW_LED_ON>:

void YELLOW_LED_ON() {                   //count down
    18aa:	df 93       	push	r29
    18ac:	cf 93       	push	r28
    18ae:	cd b7       	in	r28, 0x3d	; 61
    18b0:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1 << 5);
    18b2:	a1 e3       	ldi	r26, 0x31	; 49
    18b4:	b0 e0       	ldi	r27, 0x00	; 0
    18b6:	e1 e3       	ldi	r30, 0x31	; 49
    18b8:	f0 e0       	ldi	r31, 0x00	; 0
    18ba:	80 81       	ld	r24, Z
    18bc:	80 62       	ori	r24, 0x20	; 32
    18be:	8c 93       	st	X, r24
	PORTD |= (1 << 5);
    18c0:	a2 e3       	ldi	r26, 0x32	; 50
    18c2:	b0 e0       	ldi	r27, 0x00	; 0
    18c4:	e2 e3       	ldi	r30, 0x32	; 50
    18c6:	f0 e0       	ldi	r31, 0x00	; 0
    18c8:	80 81       	ld	r24, Z
    18ca:	80 62       	ori	r24, 0x20	; 32
    18cc:	8c 93       	st	X, r24
}
    18ce:	cf 91       	pop	r28
    18d0:	df 91       	pop	r29
    18d2:	08 95       	ret

000018d4 <YELLOW_LED_OFF>:

void YELLOW_LED_OFF() {                   //count down
    18d4:	df 93       	push	r29
    18d6:	cf 93       	push	r28
    18d8:	cd b7       	in	r28, 0x3d	; 61
    18da:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1 << 5);
    18dc:	a1 e3       	ldi	r26, 0x31	; 49
    18de:	b0 e0       	ldi	r27, 0x00	; 0
    18e0:	e1 e3       	ldi	r30, 0x31	; 49
    18e2:	f0 e0       	ldi	r31, 0x00	; 0
    18e4:	80 81       	ld	r24, Z
    18e6:	80 62       	ori	r24, 0x20	; 32
    18e8:	8c 93       	st	X, r24
	PORTD &= ~(1 << 5);
    18ea:	a2 e3       	ldi	r26, 0x32	; 50
    18ec:	b0 e0       	ldi	r27, 0x00	; 0
    18ee:	e2 e3       	ldi	r30, 0x32	; 50
    18f0:	f0 e0       	ldi	r31, 0x00	; 0
    18f2:	80 81       	ld	r24, Z
    18f4:	8f 7d       	andi	r24, 0xDF	; 223
    18f6:	8c 93       	st	X, r24
}
    18f8:	cf 91       	pop	r28
    18fa:	df 91       	pop	r29
    18fc:	08 95       	ret

000018fe <current_mode>:

void current_mode() {
    18fe:	df 93       	push	r29
    1900:	cf 93       	push	r28
    1902:	cd b7       	in	r28, 0x3d	; 61
    1904:	de b7       	in	r29, 0x3e	; 62
    1906:	2e 97       	sbiw	r28, 0x0e	; 14
    1908:	0f b6       	in	r0, 0x3f	; 63
    190a:	f8 94       	cli
    190c:	de bf       	out	0x3e, r29	; 62
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	cd bf       	out	0x3d, r28	; 61

	DDRB &= ~(1 << 7);
    1912:	a7 e3       	ldi	r26, 0x37	; 55
    1914:	b0 e0       	ldi	r27, 0x00	; 0
    1916:	e7 e3       	ldi	r30, 0x37	; 55
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	80 81       	ld	r24, Z
    191c:	8f 77       	andi	r24, 0x7F	; 127
    191e:	8c 93       	st	X, r24
	PORTB |= (1 << 7);   // internal pull up res
    1920:	a8 e3       	ldi	r26, 0x38	; 56
    1922:	b0 e0       	ldi	r27, 0x00	; 0
    1924:	e8 e3       	ldi	r30, 0x38	; 56
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	80 81       	ld	r24, Z
    192a:	80 68       	ori	r24, 0x80	; 128
    192c:	8c 93       	st	X, r24
	if (!(PINB & (1 << 7))) {
    192e:	e6 e3       	ldi	r30, 0x36	; 54
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	80 81       	ld	r24, Z
    1934:	88 23       	and	r24, r24
    1936:	0c f4       	brge	.+2      	; 0x193a <current_mode+0x3c>
    1938:	93 c0       	rjmp	.+294    	; 0x1a60 <current_mode+0x162>
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	a0 ef       	ldi	r26, 0xF0	; 240
    1940:	b1 e4       	ldi	r27, 0x41	; 65
    1942:	8b 87       	std	Y+11, r24	; 0x0b
    1944:	9c 87       	std	Y+12, r25	; 0x0c
    1946:	ad 87       	std	Y+13, r26	; 0x0d
    1948:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    194a:	6b 85       	ldd	r22, Y+11	; 0x0b
    194c:	7c 85       	ldd	r23, Y+12	; 0x0c
    194e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1950:	9e 85       	ldd	r25, Y+14	; 0x0e
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	30 e0       	ldi	r19, 0x00	; 0
    1956:	4a e7       	ldi	r20, 0x7A	; 122
    1958:	55 e4       	ldi	r21, 0x45	; 69
    195a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    195e:	dc 01       	movw	r26, r24
    1960:	cb 01       	movw	r24, r22
    1962:	8f 83       	std	Y+7, r24	; 0x07
    1964:	98 87       	std	Y+8, r25	; 0x08
    1966:	a9 87       	std	Y+9, r26	; 0x09
    1968:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    196a:	6f 81       	ldd	r22, Y+7	; 0x07
    196c:	78 85       	ldd	r23, Y+8	; 0x08
    196e:	89 85       	ldd	r24, Y+9	; 0x09
    1970:	9a 85       	ldd	r25, Y+10	; 0x0a
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	40 e8       	ldi	r20, 0x80	; 128
    1978:	5f e3       	ldi	r21, 0x3F	; 63
    197a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    197e:	88 23       	and	r24, r24
    1980:	2c f4       	brge	.+10     	; 0x198c <current_mode+0x8e>
		__ticks = 1;
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	9e 83       	std	Y+6, r25	; 0x06
    1988:	8d 83       	std	Y+5, r24	; 0x05
    198a:	3f c0       	rjmp	.+126    	; 0x1a0a <current_mode+0x10c>
	else if (__tmp > 65535)
    198c:	6f 81       	ldd	r22, Y+7	; 0x07
    198e:	78 85       	ldd	r23, Y+8	; 0x08
    1990:	89 85       	ldd	r24, Y+9	; 0x09
    1992:	9a 85       	ldd	r25, Y+10	; 0x0a
    1994:	20 e0       	ldi	r18, 0x00	; 0
    1996:	3f ef       	ldi	r19, 0xFF	; 255
    1998:	4f e7       	ldi	r20, 0x7F	; 127
    199a:	57 e4       	ldi	r21, 0x47	; 71
    199c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    19a0:	18 16       	cp	r1, r24
    19a2:	4c f5       	brge	.+82     	; 0x19f6 <current_mode+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19a4:	6b 85       	ldd	r22, Y+11	; 0x0b
    19a6:	7c 85       	ldd	r23, Y+12	; 0x0c
    19a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    19aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    19ac:	20 e0       	ldi	r18, 0x00	; 0
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	40 e2       	ldi	r20, 0x20	; 32
    19b2:	51 e4       	ldi	r21, 0x41	; 65
    19b4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19b8:	dc 01       	movw	r26, r24
    19ba:	cb 01       	movw	r24, r22
    19bc:	bc 01       	movw	r22, r24
    19be:	cd 01       	movw	r24, r26
    19c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	9e 83       	std	Y+6, r25	; 0x06
    19ca:	8d 83       	std	Y+5, r24	; 0x05
    19cc:	0f c0       	rjmp	.+30     	; 0x19ec <current_mode+0xee>
    19ce:	80 e9       	ldi	r24, 0x90	; 144
    19d0:	91 e0       	ldi	r25, 0x01	; 1
    19d2:	9c 83       	std	Y+4, r25	; 0x04
    19d4:	8b 83       	std	Y+3, r24	; 0x03
    19d6:	8b 81       	ldd	r24, Y+3	; 0x03
    19d8:	9c 81       	ldd	r25, Y+4	; 0x04
    19da:	01 97       	sbiw	r24, 0x01	; 1
    19dc:	f1 f7       	brne	.-4      	; 0x19da <current_mode+0xdc>
    19de:	9c 83       	std	Y+4, r25	; 0x04
    19e0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19e2:	8d 81       	ldd	r24, Y+5	; 0x05
    19e4:	9e 81       	ldd	r25, Y+6	; 0x06
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	9e 83       	std	Y+6, r25	; 0x06
    19ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19ec:	8d 81       	ldd	r24, Y+5	; 0x05
    19ee:	9e 81       	ldd	r25, Y+6	; 0x06
    19f0:	00 97       	sbiw	r24, 0x00	; 0
    19f2:	69 f7       	brne	.-38     	; 0x19ce <current_mode+0xd0>
    19f4:	14 c0       	rjmp	.+40     	; 0x1a1e <current_mode+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19f6:	6f 81       	ldd	r22, Y+7	; 0x07
    19f8:	78 85       	ldd	r23, Y+8	; 0x08
    19fa:	89 85       	ldd	r24, Y+9	; 0x09
    19fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    19fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a02:	dc 01       	movw	r26, r24
    1a04:	cb 01       	movw	r24, r22
    1a06:	9e 83       	std	Y+6, r25	; 0x06
    1a08:	8d 83       	std	Y+5, r24	; 0x05
    1a0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a0c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a0e:	9a 83       	std	Y+2, r25	; 0x02
    1a10:	89 83       	std	Y+1, r24	; 0x01
    1a12:	89 81       	ldd	r24, Y+1	; 0x01
    1a14:	9a 81       	ldd	r25, Y+2	; 0x02
    1a16:	01 97       	sbiw	r24, 0x01	; 1
    1a18:	f1 f7       	brne	.-4      	; 0x1a16 <current_mode+0x118>
    1a1a:	9a 83       	std	Y+2, r25	; 0x02
    1a1c:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 7))) {
    1a1e:	e6 e3       	ldi	r30, 0x36	; 54
    1a20:	f0 e0       	ldi	r31, 0x00	; 0
    1a22:	80 81       	ld	r24, Z
    1a24:	88 23       	and	r24, r24
    1a26:	e4 f0       	brlt	.+56     	; 0x1a60 <current_mode+0x162>
			if (boundry)     TIMSK |= (1 << OCIE1A); //enable timer because of it was off at 00:00:00 or 99:59:59
    1a28:	80 91 70 00 	lds	r24, 0x0070
    1a2c:	88 23       	and	r24, r24
    1a2e:	39 f0       	breq	.+14     	; 0x1a3e <current_mode+0x140>
    1a30:	a9 e5       	ldi	r26, 0x59	; 89
    1a32:	b0 e0       	ldi	r27, 0x00	; 0
    1a34:	e9 e5       	ldi	r30, 0x59	; 89
    1a36:	f0 e0       	ldi	r31, 0x00	; 0
    1a38:	80 81       	ld	r24, Z
    1a3a:	80 61       	ori	r24, 0x10	; 16
    1a3c:	8c 93       	st	X, r24
			if (mode == 0)
    1a3e:	80 91 68 00 	lds	r24, 0x0068
    1a42:	88 23       	and	r24, r24
    1a44:	21 f4       	brne	.+8      	; 0x1a4e <current_mode+0x150>
				mode = 1;
    1a46:	81 e0       	ldi	r24, 0x01	; 1
    1a48:	80 93 68 00 	sts	0x0068, r24
    1a4c:	09 c0       	rjmp	.+18     	; 0x1a60 <current_mode+0x162>
			else if (mode == 1)
    1a4e:	80 91 68 00 	lds	r24, 0x0068
    1a52:	81 30       	cpi	r24, 0x01	; 1
    1a54:	29 f4       	brne	.+10     	; 0x1a60 <current_mode+0x162>
				mode = 0;
    1a56:	10 92 68 00 	sts	0x0068, r1
    1a5a:	02 c0       	rjmp	.+4      	; 0x1a60 <current_mode+0x162>
		}
	}
	while (!(PINB & (1 << 7))) {display();
    1a5c:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    1a60:	e6 e3       	ldi	r30, 0x36	; 54
    1a62:	f0 e0       	ldi	r31, 0x00	; 0
    1a64:	80 81       	ld	r24, Z
    1a66:	88 23       	and	r24, r24
    1a68:	cc f7       	brge	.-14     	; 0x1a5c <current_mode+0x15e>
	}
}
    1a6a:	2e 96       	adiw	r28, 0x0e	; 14
    1a6c:	0f b6       	in	r0, 0x3f	; 63
    1a6e:	f8 94       	cli
    1a70:	de bf       	out	0x3e, r29	; 62
    1a72:	0f be       	out	0x3f, r0	; 63
    1a74:	cd bf       	out	0x3d, r28	; 61
    1a76:	cf 91       	pop	r28
    1a78:	df 91       	pop	r29
    1a7a:	08 95       	ret

00001a7c <sec_inc>:

void sec_inc() {
    1a7c:	df 93       	push	r29
    1a7e:	cf 93       	push	r28
    1a80:	cd b7       	in	r28, 0x3d	; 61
    1a82:	de b7       	in	r29, 0x3e	; 62
    1a84:	2e 97       	sbiw	r28, 0x0e	; 14
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	f8 94       	cli
    1a8a:	de bf       	out	0x3e, r29	; 62
    1a8c:	0f be       	out	0x3f, r0	; 63
    1a8e:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 6);
    1a90:	a7 e3       	ldi	r26, 0x37	; 55
    1a92:	b0 e0       	ldi	r27, 0x00	; 0
    1a94:	e7 e3       	ldi	r30, 0x37	; 55
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	80 81       	ld	r24, Z
    1a9a:	8f 7b       	andi	r24, 0xBF	; 191
    1a9c:	8c 93       	st	X, r24
	PORTB |= (1 << 6);   //internal pull up
    1a9e:	a8 e3       	ldi	r26, 0x38	; 56
    1aa0:	b0 e0       	ldi	r27, 0x00	; 0
    1aa2:	e8 e3       	ldi	r30, 0x38	; 56
    1aa4:	f0 e0       	ldi	r31, 0x00	; 0
    1aa6:	80 81       	ld	r24, Z
    1aa8:	80 64       	ori	r24, 0x40	; 64
    1aaa:	8c 93       	st	X, r24
	if (!(PINB & (1 << 6))) {
    1aac:	e6 e3       	ldi	r30, 0x36	; 54
    1aae:	f0 e0       	ldi	r31, 0x00	; 0
    1ab0:	80 81       	ld	r24, Z
    1ab2:	88 2f       	mov	r24, r24
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	80 74       	andi	r24, 0x40	; 64
    1ab8:	90 70       	andi	r25, 0x00	; 0
    1aba:	00 97       	sbiw	r24, 0x00	; 0
    1abc:	09 f0       	breq	.+2      	; 0x1ac0 <sec_inc+0x44>
    1abe:	9e c0       	rjmp	.+316    	; 0x1bfc <sec_inc+0x180>
    1ac0:	80 e0       	ldi	r24, 0x00	; 0
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	a0 ef       	ldi	r26, 0xF0	; 240
    1ac6:	b1 e4       	ldi	r27, 0x41	; 65
    1ac8:	8b 87       	std	Y+11, r24	; 0x0b
    1aca:	9c 87       	std	Y+12, r25	; 0x0c
    1acc:	ad 87       	std	Y+13, r26	; 0x0d
    1ace:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ad0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ad2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ad4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ad6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ad8:	20 e0       	ldi	r18, 0x00	; 0
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	4a e7       	ldi	r20, 0x7A	; 122
    1ade:	55 e4       	ldi	r21, 0x45	; 69
    1ae0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ae4:	dc 01       	movw	r26, r24
    1ae6:	cb 01       	movw	r24, r22
    1ae8:	8f 83       	std	Y+7, r24	; 0x07
    1aea:	98 87       	std	Y+8, r25	; 0x08
    1aec:	a9 87       	std	Y+9, r26	; 0x09
    1aee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1af0:	6f 81       	ldd	r22, Y+7	; 0x07
    1af2:	78 85       	ldd	r23, Y+8	; 0x08
    1af4:	89 85       	ldd	r24, Y+9	; 0x09
    1af6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af8:	20 e0       	ldi	r18, 0x00	; 0
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	40 e8       	ldi	r20, 0x80	; 128
    1afe:	5f e3       	ldi	r21, 0x3F	; 63
    1b00:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b04:	88 23       	and	r24, r24
    1b06:	2c f4       	brge	.+10     	; 0x1b12 <sec_inc+0x96>
		__ticks = 1;
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	9e 83       	std	Y+6, r25	; 0x06
    1b0e:	8d 83       	std	Y+5, r24	; 0x05
    1b10:	3f c0       	rjmp	.+126    	; 0x1b90 <sec_inc+0x114>
	else if (__tmp > 65535)
    1b12:	6f 81       	ldd	r22, Y+7	; 0x07
    1b14:	78 85       	ldd	r23, Y+8	; 0x08
    1b16:	89 85       	ldd	r24, Y+9	; 0x09
    1b18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b1a:	20 e0       	ldi	r18, 0x00	; 0
    1b1c:	3f ef       	ldi	r19, 0xFF	; 255
    1b1e:	4f e7       	ldi	r20, 0x7F	; 127
    1b20:	57 e4       	ldi	r21, 0x47	; 71
    1b22:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b26:	18 16       	cp	r1, r24
    1b28:	4c f5       	brge	.+82     	; 0x1b7c <sec_inc+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b2a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b2c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b2e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b30:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b32:	20 e0       	ldi	r18, 0x00	; 0
    1b34:	30 e0       	ldi	r19, 0x00	; 0
    1b36:	40 e2       	ldi	r20, 0x20	; 32
    1b38:	51 e4       	ldi	r21, 0x41	; 65
    1b3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b3e:	dc 01       	movw	r26, r24
    1b40:	cb 01       	movw	r24, r22
    1b42:	bc 01       	movw	r22, r24
    1b44:	cd 01       	movw	r24, r26
    1b46:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	cb 01       	movw	r24, r22
    1b4e:	9e 83       	std	Y+6, r25	; 0x06
    1b50:	8d 83       	std	Y+5, r24	; 0x05
    1b52:	0f c0       	rjmp	.+30     	; 0x1b72 <sec_inc+0xf6>
    1b54:	80 e9       	ldi	r24, 0x90	; 144
    1b56:	91 e0       	ldi	r25, 0x01	; 1
    1b58:	9c 83       	std	Y+4, r25	; 0x04
    1b5a:	8b 83       	std	Y+3, r24	; 0x03
    1b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b5e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b60:	01 97       	sbiw	r24, 0x01	; 1
    1b62:	f1 f7       	brne	.-4      	; 0x1b60 <sec_inc+0xe4>
    1b64:	9c 83       	std	Y+4, r25	; 0x04
    1b66:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b68:	8d 81       	ldd	r24, Y+5	; 0x05
    1b6a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b6c:	01 97       	sbiw	r24, 0x01	; 1
    1b6e:	9e 83       	std	Y+6, r25	; 0x06
    1b70:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b72:	8d 81       	ldd	r24, Y+5	; 0x05
    1b74:	9e 81       	ldd	r25, Y+6	; 0x06
    1b76:	00 97       	sbiw	r24, 0x00	; 0
    1b78:	69 f7       	brne	.-38     	; 0x1b54 <sec_inc+0xd8>
    1b7a:	14 c0       	rjmp	.+40     	; 0x1ba4 <sec_inc+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b7c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b7e:	78 85       	ldd	r23, Y+8	; 0x08
    1b80:	89 85       	ldd	r24, Y+9	; 0x09
    1b82:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b84:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b88:	dc 01       	movw	r26, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	9e 83       	std	Y+6, r25	; 0x06
    1b8e:	8d 83       	std	Y+5, r24	; 0x05
    1b90:	8d 81       	ldd	r24, Y+5	; 0x05
    1b92:	9e 81       	ldd	r25, Y+6	; 0x06
    1b94:	9a 83       	std	Y+2, r25	; 0x02
    1b96:	89 83       	std	Y+1, r24	; 0x01
    1b98:	89 81       	ldd	r24, Y+1	; 0x01
    1b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b9c:	01 97       	sbiw	r24, 0x01	; 1
    1b9e:	f1 f7       	brne	.-4      	; 0x1b9c <sec_inc+0x120>
    1ba0:	9a 83       	std	Y+2, r25	; 0x02
    1ba2:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 6))) {
    1ba4:	e6 e3       	ldi	r30, 0x36	; 54
    1ba6:	f0 e0       	ldi	r31, 0x00	; 0
    1ba8:	80 81       	ld	r24, Z
    1baa:	88 2f       	mov	r24, r24
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	80 74       	andi	r24, 0x40	; 64
    1bb0:	90 70       	andi	r25, 0x00	; 0
    1bb2:	00 97       	sbiw	r24, 0x00	; 0
    1bb4:	19 f5       	brne	.+70     	; 0x1bfc <sec_inc+0x180>
			sec_unit++;
    1bb6:	80 91 6a 00 	lds	r24, 0x006A
    1bba:	8f 5f       	subi	r24, 0xFF	; 255
    1bbc:	80 93 6a 00 	sts	0x006A, r24
			if (sec_unit == 10 && sec_tens != 5) {
    1bc0:	80 91 6a 00 	lds	r24, 0x006A
    1bc4:	8a 30       	cpi	r24, 0x0A	; 10
    1bc6:	59 f4       	brne	.+22     	; 0x1bde <sec_inc+0x162>
    1bc8:	80 91 6b 00 	lds	r24, 0x006B
    1bcc:	85 30       	cpi	r24, 0x05	; 5
    1bce:	39 f0       	breq	.+14     	; 0x1bde <sec_inc+0x162>
				sec_unit = 0;
    1bd0:	10 92 6a 00 	sts	0x006A, r1
				sec_tens++;
    1bd4:	80 91 6b 00 	lds	r24, 0x006B
    1bd8:	8f 5f       	subi	r24, 0xFF	; 255
    1bda:	80 93 6b 00 	sts	0x006B, r24
			}
			if (sec_unit == 10 && sec_tens == 5) {
    1bde:	80 91 6a 00 	lds	r24, 0x006A
    1be2:	8a 30       	cpi	r24, 0x0A	; 10
    1be4:	59 f4       	brne	.+22     	; 0x1bfc <sec_inc+0x180>
    1be6:	80 91 6b 00 	lds	r24, 0x006B
    1bea:	85 30       	cpi	r24, 0x05	; 5
    1bec:	39 f4       	brne	.+14     	; 0x1bfc <sec_inc+0x180>
				sec_unit = 0;
    1bee:	10 92 6a 00 	sts	0x006A, r1
				sec_tens = 0;
    1bf2:	10 92 6b 00 	sts	0x006B, r1
    1bf6:	02 c0       	rjmp	.+4      	; 0x1bfc <sec_inc+0x180>
			}
		}
	}
	while (!(PINB & (1 << 6))) {display();
    1bf8:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    1bfc:	e6 e3       	ldi	r30, 0x36	; 54
    1bfe:	f0 e0       	ldi	r31, 0x00	; 0
    1c00:	80 81       	ld	r24, Z
    1c02:	88 2f       	mov	r24, r24
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	80 74       	andi	r24, 0x40	; 64
    1c08:	90 70       	andi	r25, 0x00	; 0
    1c0a:	00 97       	sbiw	r24, 0x00	; 0
    1c0c:	a9 f3       	breq	.-22     	; 0x1bf8 <sec_inc+0x17c>
	}
}
    1c0e:	2e 96       	adiw	r28, 0x0e	; 14
    1c10:	0f b6       	in	r0, 0x3f	; 63
    1c12:	f8 94       	cli
    1c14:	de bf       	out	0x3e, r29	; 62
    1c16:	0f be       	out	0x3f, r0	; 63
    1c18:	cd bf       	out	0x3d, r28	; 61
    1c1a:	cf 91       	pop	r28
    1c1c:	df 91       	pop	r29
    1c1e:	08 95       	ret

00001c20 <sec_dec>:

void sec_dec() {
    1c20:	df 93       	push	r29
    1c22:	cf 93       	push	r28
    1c24:	cd b7       	in	r28, 0x3d	; 61
    1c26:	de b7       	in	r29, 0x3e	; 62
    1c28:	2e 97       	sbiw	r28, 0x0e	; 14
    1c2a:	0f b6       	in	r0, 0x3f	; 63
    1c2c:	f8 94       	cli
    1c2e:	de bf       	out	0x3e, r29	; 62
    1c30:	0f be       	out	0x3f, r0	; 63
    1c32:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 5);
    1c34:	a7 e3       	ldi	r26, 0x37	; 55
    1c36:	b0 e0       	ldi	r27, 0x00	; 0
    1c38:	e7 e3       	ldi	r30, 0x37	; 55
    1c3a:	f0 e0       	ldi	r31, 0x00	; 0
    1c3c:	80 81       	ld	r24, Z
    1c3e:	8f 7d       	andi	r24, 0xDF	; 223
    1c40:	8c 93       	st	X, r24
	PORTB |= (1 << 5);   //internal pull up
    1c42:	a8 e3       	ldi	r26, 0x38	; 56
    1c44:	b0 e0       	ldi	r27, 0x00	; 0
    1c46:	e8 e3       	ldi	r30, 0x38	; 56
    1c48:	f0 e0       	ldi	r31, 0x00	; 0
    1c4a:	80 81       	ld	r24, Z
    1c4c:	80 62       	ori	r24, 0x20	; 32
    1c4e:	8c 93       	st	X, r24
	if (!(PINB & (1 << 5))) {
    1c50:	e6 e3       	ldi	r30, 0x36	; 54
    1c52:	f0 e0       	ldi	r31, 0x00	; 0
    1c54:	80 81       	ld	r24, Z
    1c56:	88 2f       	mov	r24, r24
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	80 72       	andi	r24, 0x20	; 32
    1c5c:	90 70       	andi	r25, 0x00	; 0
    1c5e:	00 97       	sbiw	r24, 0x00	; 0
    1c60:	09 f0       	breq	.+2      	; 0x1c64 <sec_dec+0x44>
    1c62:	a1 c0       	rjmp	.+322    	; 0x1da6 <sec_dec+0x186>
    1c64:	80 e0       	ldi	r24, 0x00	; 0
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	a0 ef       	ldi	r26, 0xF0	; 240
    1c6a:	b1 e4       	ldi	r27, 0x41	; 65
    1c6c:	8b 87       	std	Y+11, r24	; 0x0b
    1c6e:	9c 87       	std	Y+12, r25	; 0x0c
    1c70:	ad 87       	std	Y+13, r26	; 0x0d
    1c72:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c74:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c76:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c78:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c7a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	4a e7       	ldi	r20, 0x7A	; 122
    1c82:	55 e4       	ldi	r21, 0x45	; 69
    1c84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c88:	dc 01       	movw	r26, r24
    1c8a:	cb 01       	movw	r24, r22
    1c8c:	8f 83       	std	Y+7, r24	; 0x07
    1c8e:	98 87       	std	Y+8, r25	; 0x08
    1c90:	a9 87       	std	Y+9, r26	; 0x09
    1c92:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c94:	6f 81       	ldd	r22, Y+7	; 0x07
    1c96:	78 85       	ldd	r23, Y+8	; 0x08
    1c98:	89 85       	ldd	r24, Y+9	; 0x09
    1c9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	40 e8       	ldi	r20, 0x80	; 128
    1ca2:	5f e3       	ldi	r21, 0x3F	; 63
    1ca4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ca8:	88 23       	and	r24, r24
    1caa:	2c f4       	brge	.+10     	; 0x1cb6 <sec_dec+0x96>
		__ticks = 1;
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	9e 83       	std	Y+6, r25	; 0x06
    1cb2:	8d 83       	std	Y+5, r24	; 0x05
    1cb4:	3f c0       	rjmp	.+126    	; 0x1d34 <sec_dec+0x114>
	else if (__tmp > 65535)
    1cb6:	6f 81       	ldd	r22, Y+7	; 0x07
    1cb8:	78 85       	ldd	r23, Y+8	; 0x08
    1cba:	89 85       	ldd	r24, Y+9	; 0x09
    1cbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	3f ef       	ldi	r19, 0xFF	; 255
    1cc2:	4f e7       	ldi	r20, 0x7F	; 127
    1cc4:	57 e4       	ldi	r21, 0x47	; 71
    1cc6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1cca:	18 16       	cp	r1, r24
    1ccc:	4c f5       	brge	.+82     	; 0x1d20 <sec_dec+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cce:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cd0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cd2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cd4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cd6:	20 e0       	ldi	r18, 0x00	; 0
    1cd8:	30 e0       	ldi	r19, 0x00	; 0
    1cda:	40 e2       	ldi	r20, 0x20	; 32
    1cdc:	51 e4       	ldi	r21, 0x41	; 65
    1cde:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ce2:	dc 01       	movw	r26, r24
    1ce4:	cb 01       	movw	r24, r22
    1ce6:	bc 01       	movw	r22, r24
    1ce8:	cd 01       	movw	r24, r26
    1cea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	9e 83       	std	Y+6, r25	; 0x06
    1cf4:	8d 83       	std	Y+5, r24	; 0x05
    1cf6:	0f c0       	rjmp	.+30     	; 0x1d16 <sec_dec+0xf6>
    1cf8:	80 e9       	ldi	r24, 0x90	; 144
    1cfa:	91 e0       	ldi	r25, 0x01	; 1
    1cfc:	9c 83       	std	Y+4, r25	; 0x04
    1cfe:	8b 83       	std	Y+3, r24	; 0x03
    1d00:	8b 81       	ldd	r24, Y+3	; 0x03
    1d02:	9c 81       	ldd	r25, Y+4	; 0x04
    1d04:	01 97       	sbiw	r24, 0x01	; 1
    1d06:	f1 f7       	brne	.-4      	; 0x1d04 <sec_dec+0xe4>
    1d08:	9c 83       	std	Y+4, r25	; 0x04
    1d0a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d0c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d0e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	9e 83       	std	Y+6, r25	; 0x06
    1d14:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d16:	8d 81       	ldd	r24, Y+5	; 0x05
    1d18:	9e 81       	ldd	r25, Y+6	; 0x06
    1d1a:	00 97       	sbiw	r24, 0x00	; 0
    1d1c:	69 f7       	brne	.-38     	; 0x1cf8 <sec_dec+0xd8>
    1d1e:	14 c0       	rjmp	.+40     	; 0x1d48 <sec_dec+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d20:	6f 81       	ldd	r22, Y+7	; 0x07
    1d22:	78 85       	ldd	r23, Y+8	; 0x08
    1d24:	89 85       	ldd	r24, Y+9	; 0x09
    1d26:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	9e 83       	std	Y+6, r25	; 0x06
    1d32:	8d 83       	std	Y+5, r24	; 0x05
    1d34:	8d 81       	ldd	r24, Y+5	; 0x05
    1d36:	9e 81       	ldd	r25, Y+6	; 0x06
    1d38:	9a 83       	std	Y+2, r25	; 0x02
    1d3a:	89 83       	std	Y+1, r24	; 0x01
    1d3c:	89 81       	ldd	r24, Y+1	; 0x01
    1d3e:	9a 81       	ldd	r25, Y+2	; 0x02
    1d40:	01 97       	sbiw	r24, 0x01	; 1
    1d42:	f1 f7       	brne	.-4      	; 0x1d40 <sec_dec+0x120>
    1d44:	9a 83       	std	Y+2, r25	; 0x02
    1d46:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 5))) {
    1d48:	e6 e3       	ldi	r30, 0x36	; 54
    1d4a:	f0 e0       	ldi	r31, 0x00	; 0
    1d4c:	80 81       	ld	r24, Z
    1d4e:	88 2f       	mov	r24, r24
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	80 72       	andi	r24, 0x20	; 32
    1d54:	90 70       	andi	r25, 0x00	; 0
    1d56:	00 97       	sbiw	r24, 0x00	; 0
    1d58:	31 f5       	brne	.+76     	; 0x1da6 <sec_dec+0x186>
			sec_unit--;
    1d5a:	80 91 6a 00 	lds	r24, 0x006A
    1d5e:	81 50       	subi	r24, 0x01	; 1
    1d60:	80 93 6a 00 	sts	0x006A, r24
			if (sec_unit == -1 && sec_tens != 0) {
    1d64:	80 91 6a 00 	lds	r24, 0x006A
    1d68:	8f 3f       	cpi	r24, 0xFF	; 255
    1d6a:	61 f4       	brne	.+24     	; 0x1d84 <sec_dec+0x164>
    1d6c:	80 91 6b 00 	lds	r24, 0x006B
    1d70:	88 23       	and	r24, r24
    1d72:	41 f0       	breq	.+16     	; 0x1d84 <sec_dec+0x164>
				sec_tens--;
    1d74:	80 91 6b 00 	lds	r24, 0x006B
    1d78:	81 50       	subi	r24, 0x01	; 1
    1d7a:	80 93 6b 00 	sts	0x006B, r24
				sec_unit = 9;
    1d7e:	89 e0       	ldi	r24, 0x09	; 9
    1d80:	80 93 6a 00 	sts	0x006A, r24
			}
			if (sec_unit == -1 && sec_tens == 0) {
    1d84:	80 91 6a 00 	lds	r24, 0x006A
    1d88:	8f 3f       	cpi	r24, 0xFF	; 255
    1d8a:	69 f4       	brne	.+26     	; 0x1da6 <sec_dec+0x186>
    1d8c:	80 91 6b 00 	lds	r24, 0x006B
    1d90:	88 23       	and	r24, r24
    1d92:	49 f4       	brne	.+18     	; 0x1da6 <sec_dec+0x186>
				sec_unit = 9;
    1d94:	89 e0       	ldi	r24, 0x09	; 9
    1d96:	80 93 6a 00 	sts	0x006A, r24
				sec_tens = 5;
    1d9a:	85 e0       	ldi	r24, 0x05	; 5
    1d9c:	80 93 6b 00 	sts	0x006B, r24
    1da0:	02 c0       	rjmp	.+4      	; 0x1da6 <sec_dec+0x186>
			}
		}
	}
	while (!(PINB & (1 << 5))) {display();
    1da2:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    1da6:	e6 e3       	ldi	r30, 0x36	; 54
    1da8:	f0 e0       	ldi	r31, 0x00	; 0
    1daa:	80 81       	ld	r24, Z
    1dac:	88 2f       	mov	r24, r24
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	80 72       	andi	r24, 0x20	; 32
    1db2:	90 70       	andi	r25, 0x00	; 0
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	a9 f3       	breq	.-22     	; 0x1da2 <sec_dec+0x182>
	}
}
    1db8:	2e 96       	adiw	r28, 0x0e	; 14
    1dba:	0f b6       	in	r0, 0x3f	; 63
    1dbc:	f8 94       	cli
    1dbe:	de bf       	out	0x3e, r29	; 62
    1dc0:	0f be       	out	0x3f, r0	; 63
    1dc2:	cd bf       	out	0x3d, r28	; 61
    1dc4:	cf 91       	pop	r28
    1dc6:	df 91       	pop	r29
    1dc8:	08 95       	ret

00001dca <min_inc>:

void min_inc() {
    1dca:	df 93       	push	r29
    1dcc:	cf 93       	push	r28
    1dce:	cd b7       	in	r28, 0x3d	; 61
    1dd0:	de b7       	in	r29, 0x3e	; 62
    1dd2:	2e 97       	sbiw	r28, 0x0e	; 14
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	f8 94       	cli
    1dd8:	de bf       	out	0x3e, r29	; 62
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 4);
    1dde:	a7 e3       	ldi	r26, 0x37	; 55
    1de0:	b0 e0       	ldi	r27, 0x00	; 0
    1de2:	e7 e3       	ldi	r30, 0x37	; 55
    1de4:	f0 e0       	ldi	r31, 0x00	; 0
    1de6:	80 81       	ld	r24, Z
    1de8:	8f 7e       	andi	r24, 0xEF	; 239
    1dea:	8c 93       	st	X, r24
	PORTB |= (1 << 4);   //internal pull up
    1dec:	a8 e3       	ldi	r26, 0x38	; 56
    1dee:	b0 e0       	ldi	r27, 0x00	; 0
    1df0:	e8 e3       	ldi	r30, 0x38	; 56
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	80 81       	ld	r24, Z
    1df6:	80 61       	ori	r24, 0x10	; 16
    1df8:	8c 93       	st	X, r24
	if (!(PINB & (1 << 4))) {
    1dfa:	e6 e3       	ldi	r30, 0x36	; 54
    1dfc:	f0 e0       	ldi	r31, 0x00	; 0
    1dfe:	80 81       	ld	r24, Z
    1e00:	88 2f       	mov	r24, r24
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	80 71       	andi	r24, 0x10	; 16
    1e06:	90 70       	andi	r25, 0x00	; 0
    1e08:	00 97       	sbiw	r24, 0x00	; 0
    1e0a:	09 f0       	breq	.+2      	; 0x1e0e <min_inc+0x44>
    1e0c:	9e c0       	rjmp	.+316    	; 0x1f4a <min_inc+0x180>
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	a0 ef       	ldi	r26, 0xF0	; 240
    1e14:	b1 e4       	ldi	r27, 0x41	; 65
    1e16:	8b 87       	std	Y+11, r24	; 0x0b
    1e18:	9c 87       	std	Y+12, r25	; 0x0c
    1e1a:	ad 87       	std	Y+13, r26	; 0x0d
    1e1c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e20:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e22:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e24:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e26:	20 e0       	ldi	r18, 0x00	; 0
    1e28:	30 e0       	ldi	r19, 0x00	; 0
    1e2a:	4a e7       	ldi	r20, 0x7A	; 122
    1e2c:	55 e4       	ldi	r21, 0x45	; 69
    1e2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e32:	dc 01       	movw	r26, r24
    1e34:	cb 01       	movw	r24, r22
    1e36:	8f 83       	std	Y+7, r24	; 0x07
    1e38:	98 87       	std	Y+8, r25	; 0x08
    1e3a:	a9 87       	std	Y+9, r26	; 0x09
    1e3c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e3e:	6f 81       	ldd	r22, Y+7	; 0x07
    1e40:	78 85       	ldd	r23, Y+8	; 0x08
    1e42:	89 85       	ldd	r24, Y+9	; 0x09
    1e44:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e46:	20 e0       	ldi	r18, 0x00	; 0
    1e48:	30 e0       	ldi	r19, 0x00	; 0
    1e4a:	40 e8       	ldi	r20, 0x80	; 128
    1e4c:	5f e3       	ldi	r21, 0x3F	; 63
    1e4e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e52:	88 23       	and	r24, r24
    1e54:	2c f4       	brge	.+10     	; 0x1e60 <min_inc+0x96>
		__ticks = 1;
    1e56:	81 e0       	ldi	r24, 0x01	; 1
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	9e 83       	std	Y+6, r25	; 0x06
    1e5c:	8d 83       	std	Y+5, r24	; 0x05
    1e5e:	3f c0       	rjmp	.+126    	; 0x1ede <min_inc+0x114>
	else if (__tmp > 65535)
    1e60:	6f 81       	ldd	r22, Y+7	; 0x07
    1e62:	78 85       	ldd	r23, Y+8	; 0x08
    1e64:	89 85       	ldd	r24, Y+9	; 0x09
    1e66:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	3f ef       	ldi	r19, 0xFF	; 255
    1e6c:	4f e7       	ldi	r20, 0x7F	; 127
    1e6e:	57 e4       	ldi	r21, 0x47	; 71
    1e70:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e74:	18 16       	cp	r1, r24
    1e76:	4c f5       	brge	.+82     	; 0x1eca <min_inc+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e78:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e2       	ldi	r20, 0x20	; 32
    1e86:	51 e4       	ldi	r21, 0x41	; 65
    1e88:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e8c:	dc 01       	movw	r26, r24
    1e8e:	cb 01       	movw	r24, r22
    1e90:	bc 01       	movw	r22, r24
    1e92:	cd 01       	movw	r24, r26
    1e94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	9e 83       	std	Y+6, r25	; 0x06
    1e9e:	8d 83       	std	Y+5, r24	; 0x05
    1ea0:	0f c0       	rjmp	.+30     	; 0x1ec0 <min_inc+0xf6>
    1ea2:	80 e9       	ldi	r24, 0x90	; 144
    1ea4:	91 e0       	ldi	r25, 0x01	; 1
    1ea6:	9c 83       	std	Y+4, r25	; 0x04
    1ea8:	8b 83       	std	Y+3, r24	; 0x03
    1eaa:	8b 81       	ldd	r24, Y+3	; 0x03
    1eac:	9c 81       	ldd	r25, Y+4	; 0x04
    1eae:	01 97       	sbiw	r24, 0x01	; 1
    1eb0:	f1 f7       	brne	.-4      	; 0x1eae <min_inc+0xe4>
    1eb2:	9c 83       	std	Y+4, r25	; 0x04
    1eb4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1eb8:	9e 81       	ldd	r25, Y+6	; 0x06
    1eba:	01 97       	sbiw	r24, 0x01	; 1
    1ebc:	9e 83       	std	Y+6, r25	; 0x06
    1ebe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ec0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ec2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ec4:	00 97       	sbiw	r24, 0x00	; 0
    1ec6:	69 f7       	brne	.-38     	; 0x1ea2 <min_inc+0xd8>
    1ec8:	14 c0       	rjmp	.+40     	; 0x1ef2 <min_inc+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1eca:	6f 81       	ldd	r22, Y+7	; 0x07
    1ecc:	78 85       	ldd	r23, Y+8	; 0x08
    1ece:	89 85       	ldd	r24, Y+9	; 0x09
    1ed0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ed2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ed6:	dc 01       	movw	r26, r24
    1ed8:	cb 01       	movw	r24, r22
    1eda:	9e 83       	std	Y+6, r25	; 0x06
    1edc:	8d 83       	std	Y+5, r24	; 0x05
    1ede:	8d 81       	ldd	r24, Y+5	; 0x05
    1ee0:	9e 81       	ldd	r25, Y+6	; 0x06
    1ee2:	9a 83       	std	Y+2, r25	; 0x02
    1ee4:	89 83       	std	Y+1, r24	; 0x01
    1ee6:	89 81       	ldd	r24, Y+1	; 0x01
    1ee8:	9a 81       	ldd	r25, Y+2	; 0x02
    1eea:	01 97       	sbiw	r24, 0x01	; 1
    1eec:	f1 f7       	brne	.-4      	; 0x1eea <min_inc+0x120>
    1eee:	9a 83       	std	Y+2, r25	; 0x02
    1ef0:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 4))) {
    1ef2:	e6 e3       	ldi	r30, 0x36	; 54
    1ef4:	f0 e0       	ldi	r31, 0x00	; 0
    1ef6:	80 81       	ld	r24, Z
    1ef8:	88 2f       	mov	r24, r24
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	80 71       	andi	r24, 0x10	; 16
    1efe:	90 70       	andi	r25, 0x00	; 0
    1f00:	00 97       	sbiw	r24, 0x00	; 0
    1f02:	19 f5       	brne	.+70     	; 0x1f4a <min_inc+0x180>
			min_unit++;
    1f04:	80 91 6c 00 	lds	r24, 0x006C
    1f08:	8f 5f       	subi	r24, 0xFF	; 255
    1f0a:	80 93 6c 00 	sts	0x006C, r24
			if (min_unit == 10 && min_tens != 5) {
    1f0e:	80 91 6c 00 	lds	r24, 0x006C
    1f12:	8a 30       	cpi	r24, 0x0A	; 10
    1f14:	59 f4       	brne	.+22     	; 0x1f2c <min_inc+0x162>
    1f16:	80 91 6d 00 	lds	r24, 0x006D
    1f1a:	85 30       	cpi	r24, 0x05	; 5
    1f1c:	39 f0       	breq	.+14     	; 0x1f2c <min_inc+0x162>
				min_unit = 0;
    1f1e:	10 92 6c 00 	sts	0x006C, r1
				min_tens++;
    1f22:	80 91 6d 00 	lds	r24, 0x006D
    1f26:	8f 5f       	subi	r24, 0xFF	; 255
    1f28:	80 93 6d 00 	sts	0x006D, r24
			}
			if (min_unit == 10 && min_tens == 5) {
    1f2c:	80 91 6c 00 	lds	r24, 0x006C
    1f30:	8a 30       	cpi	r24, 0x0A	; 10
    1f32:	59 f4       	brne	.+22     	; 0x1f4a <min_inc+0x180>
    1f34:	80 91 6d 00 	lds	r24, 0x006D
    1f38:	85 30       	cpi	r24, 0x05	; 5
    1f3a:	39 f4       	brne	.+14     	; 0x1f4a <min_inc+0x180>
				min_unit = 0;
    1f3c:	10 92 6c 00 	sts	0x006C, r1
				min_tens = 0;
    1f40:	10 92 6d 00 	sts	0x006D, r1
    1f44:	02 c0       	rjmp	.+4      	; 0x1f4a <min_inc+0x180>
			}
		}
	}
	while (!(PINB & (1 << 4))) {display();
    1f46:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    1f4a:	e6 e3       	ldi	r30, 0x36	; 54
    1f4c:	f0 e0       	ldi	r31, 0x00	; 0
    1f4e:	80 81       	ld	r24, Z
    1f50:	88 2f       	mov	r24, r24
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	80 71       	andi	r24, 0x10	; 16
    1f56:	90 70       	andi	r25, 0x00	; 0
    1f58:	00 97       	sbiw	r24, 0x00	; 0
    1f5a:	a9 f3       	breq	.-22     	; 0x1f46 <min_inc+0x17c>
	}
}
    1f5c:	2e 96       	adiw	r28, 0x0e	; 14
    1f5e:	0f b6       	in	r0, 0x3f	; 63
    1f60:	f8 94       	cli
    1f62:	de bf       	out	0x3e, r29	; 62
    1f64:	0f be       	out	0x3f, r0	; 63
    1f66:	cd bf       	out	0x3d, r28	; 61
    1f68:	cf 91       	pop	r28
    1f6a:	df 91       	pop	r29
    1f6c:	08 95       	ret

00001f6e <min_dec>:

void min_dec() {
    1f6e:	df 93       	push	r29
    1f70:	cf 93       	push	r28
    1f72:	cd b7       	in	r28, 0x3d	; 61
    1f74:	de b7       	in	r29, 0x3e	; 62
    1f76:	2e 97       	sbiw	r28, 0x0e	; 14
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 3);
    1f82:	a7 e3       	ldi	r26, 0x37	; 55
    1f84:	b0 e0       	ldi	r27, 0x00	; 0
    1f86:	e7 e3       	ldi	r30, 0x37	; 55
    1f88:	f0 e0       	ldi	r31, 0x00	; 0
    1f8a:	80 81       	ld	r24, Z
    1f8c:	87 7f       	andi	r24, 0xF7	; 247
    1f8e:	8c 93       	st	X, r24
	PORTB |= (1 << 3);   //internal pull up
    1f90:	a8 e3       	ldi	r26, 0x38	; 56
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	e8 e3       	ldi	r30, 0x38	; 56
    1f96:	f0 e0       	ldi	r31, 0x00	; 0
    1f98:	80 81       	ld	r24, Z
    1f9a:	88 60       	ori	r24, 0x08	; 8
    1f9c:	8c 93       	st	X, r24
	if (!(PINB & (1 << 3))) {
    1f9e:	e6 e3       	ldi	r30, 0x36	; 54
    1fa0:	f0 e0       	ldi	r31, 0x00	; 0
    1fa2:	80 81       	ld	r24, Z
    1fa4:	88 2f       	mov	r24, r24
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	88 70       	andi	r24, 0x08	; 8
    1faa:	90 70       	andi	r25, 0x00	; 0
    1fac:	00 97       	sbiw	r24, 0x00	; 0
    1fae:	09 f0       	breq	.+2      	; 0x1fb2 <min_dec+0x44>
    1fb0:	a1 c0       	rjmp	.+322    	; 0x20f4 <min_dec+0x186>
    1fb2:	80 e0       	ldi	r24, 0x00	; 0
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	a0 ef       	ldi	r26, 0xF0	; 240
    1fb8:	b1 e4       	ldi	r27, 0x41	; 65
    1fba:	8b 87       	std	Y+11, r24	; 0x0b
    1fbc:	9c 87       	std	Y+12, r25	; 0x0c
    1fbe:	ad 87       	std	Y+13, r26	; 0x0d
    1fc0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fc2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fc4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fc6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fc8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fca:	20 e0       	ldi	r18, 0x00	; 0
    1fcc:	30 e0       	ldi	r19, 0x00	; 0
    1fce:	4a e7       	ldi	r20, 0x7A	; 122
    1fd0:	55 e4       	ldi	r21, 0x45	; 69
    1fd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fd6:	dc 01       	movw	r26, r24
    1fd8:	cb 01       	movw	r24, r22
    1fda:	8f 83       	std	Y+7, r24	; 0x07
    1fdc:	98 87       	std	Y+8, r25	; 0x08
    1fde:	a9 87       	std	Y+9, r26	; 0x09
    1fe0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1fe2:	6f 81       	ldd	r22, Y+7	; 0x07
    1fe4:	78 85       	ldd	r23, Y+8	; 0x08
    1fe6:	89 85       	ldd	r24, Y+9	; 0x09
    1fe8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	40 e8       	ldi	r20, 0x80	; 128
    1ff0:	5f e3       	ldi	r21, 0x3F	; 63
    1ff2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ff6:	88 23       	and	r24, r24
    1ff8:	2c f4       	brge	.+10     	; 0x2004 <min_dec+0x96>
		__ticks = 1;
    1ffa:	81 e0       	ldi	r24, 0x01	; 1
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	9e 83       	std	Y+6, r25	; 0x06
    2000:	8d 83       	std	Y+5, r24	; 0x05
    2002:	3f c0       	rjmp	.+126    	; 0x2082 <min_dec+0x114>
	else if (__tmp > 65535)
    2004:	6f 81       	ldd	r22, Y+7	; 0x07
    2006:	78 85       	ldd	r23, Y+8	; 0x08
    2008:	89 85       	ldd	r24, Y+9	; 0x09
    200a:	9a 85       	ldd	r25, Y+10	; 0x0a
    200c:	20 e0       	ldi	r18, 0x00	; 0
    200e:	3f ef       	ldi	r19, 0xFF	; 255
    2010:	4f e7       	ldi	r20, 0x7F	; 127
    2012:	57 e4       	ldi	r21, 0x47	; 71
    2014:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2018:	18 16       	cp	r1, r24
    201a:	4c f5       	brge	.+82     	; 0x206e <min_dec+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    201c:	6b 85       	ldd	r22, Y+11	; 0x0b
    201e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2020:	8d 85       	ldd	r24, Y+13	; 0x0d
    2022:	9e 85       	ldd	r25, Y+14	; 0x0e
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	40 e2       	ldi	r20, 0x20	; 32
    202a:	51 e4       	ldi	r21, 0x41	; 65
    202c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	bc 01       	movw	r22, r24
    2036:	cd 01       	movw	r24, r26
    2038:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    203c:	dc 01       	movw	r26, r24
    203e:	cb 01       	movw	r24, r22
    2040:	9e 83       	std	Y+6, r25	; 0x06
    2042:	8d 83       	std	Y+5, r24	; 0x05
    2044:	0f c0       	rjmp	.+30     	; 0x2064 <min_dec+0xf6>
    2046:	80 e9       	ldi	r24, 0x90	; 144
    2048:	91 e0       	ldi	r25, 0x01	; 1
    204a:	9c 83       	std	Y+4, r25	; 0x04
    204c:	8b 83       	std	Y+3, r24	; 0x03
    204e:	8b 81       	ldd	r24, Y+3	; 0x03
    2050:	9c 81       	ldd	r25, Y+4	; 0x04
    2052:	01 97       	sbiw	r24, 0x01	; 1
    2054:	f1 f7       	brne	.-4      	; 0x2052 <min_dec+0xe4>
    2056:	9c 83       	std	Y+4, r25	; 0x04
    2058:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    205a:	8d 81       	ldd	r24, Y+5	; 0x05
    205c:	9e 81       	ldd	r25, Y+6	; 0x06
    205e:	01 97       	sbiw	r24, 0x01	; 1
    2060:	9e 83       	std	Y+6, r25	; 0x06
    2062:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2064:	8d 81       	ldd	r24, Y+5	; 0x05
    2066:	9e 81       	ldd	r25, Y+6	; 0x06
    2068:	00 97       	sbiw	r24, 0x00	; 0
    206a:	69 f7       	brne	.-38     	; 0x2046 <min_dec+0xd8>
    206c:	14 c0       	rjmp	.+40     	; 0x2096 <min_dec+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    206e:	6f 81       	ldd	r22, Y+7	; 0x07
    2070:	78 85       	ldd	r23, Y+8	; 0x08
    2072:	89 85       	ldd	r24, Y+9	; 0x09
    2074:	9a 85       	ldd	r25, Y+10	; 0x0a
    2076:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    207a:	dc 01       	movw	r26, r24
    207c:	cb 01       	movw	r24, r22
    207e:	9e 83       	std	Y+6, r25	; 0x06
    2080:	8d 83       	std	Y+5, r24	; 0x05
    2082:	8d 81       	ldd	r24, Y+5	; 0x05
    2084:	9e 81       	ldd	r25, Y+6	; 0x06
    2086:	9a 83       	std	Y+2, r25	; 0x02
    2088:	89 83       	std	Y+1, r24	; 0x01
    208a:	89 81       	ldd	r24, Y+1	; 0x01
    208c:	9a 81       	ldd	r25, Y+2	; 0x02
    208e:	01 97       	sbiw	r24, 0x01	; 1
    2090:	f1 f7       	brne	.-4      	; 0x208e <min_dec+0x120>
    2092:	9a 83       	std	Y+2, r25	; 0x02
    2094:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 3))) {
    2096:	e6 e3       	ldi	r30, 0x36	; 54
    2098:	f0 e0       	ldi	r31, 0x00	; 0
    209a:	80 81       	ld	r24, Z
    209c:	88 2f       	mov	r24, r24
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	88 70       	andi	r24, 0x08	; 8
    20a2:	90 70       	andi	r25, 0x00	; 0
    20a4:	00 97       	sbiw	r24, 0x00	; 0
    20a6:	31 f5       	brne	.+76     	; 0x20f4 <min_dec+0x186>
			min_unit--;
    20a8:	80 91 6c 00 	lds	r24, 0x006C
    20ac:	81 50       	subi	r24, 0x01	; 1
    20ae:	80 93 6c 00 	sts	0x006C, r24
			if (min_unit == -1 && min_tens != 0) {
    20b2:	80 91 6c 00 	lds	r24, 0x006C
    20b6:	8f 3f       	cpi	r24, 0xFF	; 255
    20b8:	61 f4       	brne	.+24     	; 0x20d2 <min_dec+0x164>
    20ba:	80 91 6d 00 	lds	r24, 0x006D
    20be:	88 23       	and	r24, r24
    20c0:	41 f0       	breq	.+16     	; 0x20d2 <min_dec+0x164>
				min_tens--;
    20c2:	80 91 6d 00 	lds	r24, 0x006D
    20c6:	81 50       	subi	r24, 0x01	; 1
    20c8:	80 93 6d 00 	sts	0x006D, r24
				min_unit = 9;
    20cc:	89 e0       	ldi	r24, 0x09	; 9
    20ce:	80 93 6c 00 	sts	0x006C, r24
			}
			if (min_unit == -1 && min_tens == 0) {
    20d2:	80 91 6c 00 	lds	r24, 0x006C
    20d6:	8f 3f       	cpi	r24, 0xFF	; 255
    20d8:	69 f4       	brne	.+26     	; 0x20f4 <min_dec+0x186>
    20da:	80 91 6d 00 	lds	r24, 0x006D
    20de:	88 23       	and	r24, r24
    20e0:	49 f4       	brne	.+18     	; 0x20f4 <min_dec+0x186>
				min_unit = 9;
    20e2:	89 e0       	ldi	r24, 0x09	; 9
    20e4:	80 93 6c 00 	sts	0x006C, r24
				min_tens = 5;
    20e8:	85 e0       	ldi	r24, 0x05	; 5
    20ea:	80 93 6d 00 	sts	0x006D, r24
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <min_dec+0x186>
			}
		}
	}
	while (!(PINB & (1 << 3))) {display();
    20f0:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    20f4:	e6 e3       	ldi	r30, 0x36	; 54
    20f6:	f0 e0       	ldi	r31, 0x00	; 0
    20f8:	80 81       	ld	r24, Z
    20fa:	88 2f       	mov	r24, r24
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	88 70       	andi	r24, 0x08	; 8
    2100:	90 70       	andi	r25, 0x00	; 0
    2102:	00 97       	sbiw	r24, 0x00	; 0
    2104:	a9 f3       	breq	.-22     	; 0x20f0 <min_dec+0x182>
	}
}
    2106:	2e 96       	adiw	r28, 0x0e	; 14
    2108:	0f b6       	in	r0, 0x3f	; 63
    210a:	f8 94       	cli
    210c:	de bf       	out	0x3e, r29	; 62
    210e:	0f be       	out	0x3f, r0	; 63
    2110:	cd bf       	out	0x3d, r28	; 61
    2112:	cf 91       	pop	r28
    2114:	df 91       	pop	r29
    2116:	08 95       	ret

00002118 <hour_inc>:

void hour_inc() {
    2118:	df 93       	push	r29
    211a:	cf 93       	push	r28
    211c:	cd b7       	in	r28, 0x3d	; 61
    211e:	de b7       	in	r29, 0x3e	; 62
    2120:	2e 97       	sbiw	r28, 0x0e	; 14
    2122:	0f b6       	in	r0, 0x3f	; 63
    2124:	f8 94       	cli
    2126:	de bf       	out	0x3e, r29	; 62
    2128:	0f be       	out	0x3f, r0	; 63
    212a:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 1);
    212c:	a7 e3       	ldi	r26, 0x37	; 55
    212e:	b0 e0       	ldi	r27, 0x00	; 0
    2130:	e7 e3       	ldi	r30, 0x37	; 55
    2132:	f0 e0       	ldi	r31, 0x00	; 0
    2134:	80 81       	ld	r24, Z
    2136:	8d 7f       	andi	r24, 0xFD	; 253
    2138:	8c 93       	st	X, r24
	PORTB |= (1 << 1);   //internal pull up
    213a:	a8 e3       	ldi	r26, 0x38	; 56
    213c:	b0 e0       	ldi	r27, 0x00	; 0
    213e:	e8 e3       	ldi	r30, 0x38	; 56
    2140:	f0 e0       	ldi	r31, 0x00	; 0
    2142:	80 81       	ld	r24, Z
    2144:	82 60       	ori	r24, 0x02	; 2
    2146:	8c 93       	st	X, r24
	if (!(PINB & (1 << 1))) {
    2148:	e6 e3       	ldi	r30, 0x36	; 54
    214a:	f0 e0       	ldi	r31, 0x00	; 0
    214c:	80 81       	ld	r24, Z
    214e:	88 2f       	mov	r24, r24
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	82 70       	andi	r24, 0x02	; 2
    2154:	90 70       	andi	r25, 0x00	; 0
    2156:	00 97       	sbiw	r24, 0x00	; 0
    2158:	09 f0       	breq	.+2      	; 0x215c <hour_inc+0x44>
    215a:	9e c0       	rjmp	.+316    	; 0x2298 <hour_inc+0x180>
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	a0 ef       	ldi	r26, 0xF0	; 240
    2162:	b1 e4       	ldi	r27, 0x41	; 65
    2164:	8b 87       	std	Y+11, r24	; 0x0b
    2166:	9c 87       	std	Y+12, r25	; 0x0c
    2168:	ad 87       	std	Y+13, r26	; 0x0d
    216a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    216c:	6b 85       	ldd	r22, Y+11	; 0x0b
    216e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2170:	8d 85       	ldd	r24, Y+13	; 0x0d
    2172:	9e 85       	ldd	r25, Y+14	; 0x0e
    2174:	20 e0       	ldi	r18, 0x00	; 0
    2176:	30 e0       	ldi	r19, 0x00	; 0
    2178:	4a e7       	ldi	r20, 0x7A	; 122
    217a:	55 e4       	ldi	r21, 0x45	; 69
    217c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2180:	dc 01       	movw	r26, r24
    2182:	cb 01       	movw	r24, r22
    2184:	8f 83       	std	Y+7, r24	; 0x07
    2186:	98 87       	std	Y+8, r25	; 0x08
    2188:	a9 87       	std	Y+9, r26	; 0x09
    218a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    218c:	6f 81       	ldd	r22, Y+7	; 0x07
    218e:	78 85       	ldd	r23, Y+8	; 0x08
    2190:	89 85       	ldd	r24, Y+9	; 0x09
    2192:	9a 85       	ldd	r25, Y+10	; 0x0a
    2194:	20 e0       	ldi	r18, 0x00	; 0
    2196:	30 e0       	ldi	r19, 0x00	; 0
    2198:	40 e8       	ldi	r20, 0x80	; 128
    219a:	5f e3       	ldi	r21, 0x3F	; 63
    219c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    21a0:	88 23       	and	r24, r24
    21a2:	2c f4       	brge	.+10     	; 0x21ae <hour_inc+0x96>
		__ticks = 1;
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	9e 83       	std	Y+6, r25	; 0x06
    21aa:	8d 83       	std	Y+5, r24	; 0x05
    21ac:	3f c0       	rjmp	.+126    	; 0x222c <hour_inc+0x114>
	else if (__tmp > 65535)
    21ae:	6f 81       	ldd	r22, Y+7	; 0x07
    21b0:	78 85       	ldd	r23, Y+8	; 0x08
    21b2:	89 85       	ldd	r24, Y+9	; 0x09
    21b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    21b6:	20 e0       	ldi	r18, 0x00	; 0
    21b8:	3f ef       	ldi	r19, 0xFF	; 255
    21ba:	4f e7       	ldi	r20, 0x7F	; 127
    21bc:	57 e4       	ldi	r21, 0x47	; 71
    21be:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    21c2:	18 16       	cp	r1, r24
    21c4:	4c f5       	brge	.+82     	; 0x2218 <hour_inc+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    21c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    21ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    21cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	40 e2       	ldi	r20, 0x20	; 32
    21d4:	51 e4       	ldi	r21, 0x41	; 65
    21d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	bc 01       	movw	r22, r24
    21e0:	cd 01       	movw	r24, r26
    21e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21e6:	dc 01       	movw	r26, r24
    21e8:	cb 01       	movw	r24, r22
    21ea:	9e 83       	std	Y+6, r25	; 0x06
    21ec:	8d 83       	std	Y+5, r24	; 0x05
    21ee:	0f c0       	rjmp	.+30     	; 0x220e <hour_inc+0xf6>
    21f0:	80 e9       	ldi	r24, 0x90	; 144
    21f2:	91 e0       	ldi	r25, 0x01	; 1
    21f4:	9c 83       	std	Y+4, r25	; 0x04
    21f6:	8b 83       	std	Y+3, r24	; 0x03
    21f8:	8b 81       	ldd	r24, Y+3	; 0x03
    21fa:	9c 81       	ldd	r25, Y+4	; 0x04
    21fc:	01 97       	sbiw	r24, 0x01	; 1
    21fe:	f1 f7       	brne	.-4      	; 0x21fc <hour_inc+0xe4>
    2200:	9c 83       	std	Y+4, r25	; 0x04
    2202:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2204:	8d 81       	ldd	r24, Y+5	; 0x05
    2206:	9e 81       	ldd	r25, Y+6	; 0x06
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	9e 83       	std	Y+6, r25	; 0x06
    220c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    220e:	8d 81       	ldd	r24, Y+5	; 0x05
    2210:	9e 81       	ldd	r25, Y+6	; 0x06
    2212:	00 97       	sbiw	r24, 0x00	; 0
    2214:	69 f7       	brne	.-38     	; 0x21f0 <hour_inc+0xd8>
    2216:	14 c0       	rjmp	.+40     	; 0x2240 <hour_inc+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2218:	6f 81       	ldd	r22, Y+7	; 0x07
    221a:	78 85       	ldd	r23, Y+8	; 0x08
    221c:	89 85       	ldd	r24, Y+9	; 0x09
    221e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2220:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2224:	dc 01       	movw	r26, r24
    2226:	cb 01       	movw	r24, r22
    2228:	9e 83       	std	Y+6, r25	; 0x06
    222a:	8d 83       	std	Y+5, r24	; 0x05
    222c:	8d 81       	ldd	r24, Y+5	; 0x05
    222e:	9e 81       	ldd	r25, Y+6	; 0x06
    2230:	9a 83       	std	Y+2, r25	; 0x02
    2232:	89 83       	std	Y+1, r24	; 0x01
    2234:	89 81       	ldd	r24, Y+1	; 0x01
    2236:	9a 81       	ldd	r25, Y+2	; 0x02
    2238:	01 97       	sbiw	r24, 0x01	; 1
    223a:	f1 f7       	brne	.-4      	; 0x2238 <hour_inc+0x120>
    223c:	9a 83       	std	Y+2, r25	; 0x02
    223e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 1))) {
    2240:	e6 e3       	ldi	r30, 0x36	; 54
    2242:	f0 e0       	ldi	r31, 0x00	; 0
    2244:	80 81       	ld	r24, Z
    2246:	88 2f       	mov	r24, r24
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	82 70       	andi	r24, 0x02	; 2
    224c:	90 70       	andi	r25, 0x00	; 0
    224e:	00 97       	sbiw	r24, 0x00	; 0
    2250:	19 f5       	brne	.+70     	; 0x2298 <hour_inc+0x180>
			hour_unit++;
    2252:	80 91 6e 00 	lds	r24, 0x006E
    2256:	8f 5f       	subi	r24, 0xFF	; 255
    2258:	80 93 6e 00 	sts	0x006E, r24
			if (hour_unit == 10 && hour_tens != 9) {
    225c:	80 91 6e 00 	lds	r24, 0x006E
    2260:	8a 30       	cpi	r24, 0x0A	; 10
    2262:	59 f4       	brne	.+22     	; 0x227a <hour_inc+0x162>
    2264:	80 91 6f 00 	lds	r24, 0x006F
    2268:	89 30       	cpi	r24, 0x09	; 9
    226a:	39 f0       	breq	.+14     	; 0x227a <hour_inc+0x162>
				hour_unit = 0;
    226c:	10 92 6e 00 	sts	0x006E, r1
				hour_tens++;
    2270:	80 91 6f 00 	lds	r24, 0x006F
    2274:	8f 5f       	subi	r24, 0xFF	; 255
    2276:	80 93 6f 00 	sts	0x006F, r24
			}
			if (hour_unit == 10 && hour_tens == 9) {
    227a:	80 91 6e 00 	lds	r24, 0x006E
    227e:	8a 30       	cpi	r24, 0x0A	; 10
    2280:	59 f4       	brne	.+22     	; 0x2298 <hour_inc+0x180>
    2282:	80 91 6f 00 	lds	r24, 0x006F
    2286:	89 30       	cpi	r24, 0x09	; 9
    2288:	39 f4       	brne	.+14     	; 0x2298 <hour_inc+0x180>
				hour_unit = 0;
    228a:	10 92 6e 00 	sts	0x006E, r1
				hour_tens = 0;
    228e:	10 92 6f 00 	sts	0x006F, r1
    2292:	02 c0       	rjmp	.+4      	; 0x2298 <hour_inc+0x180>
			}
		}
	}
	while (!(PINB & (1 << 1))) {display();
    2294:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    2298:	e6 e3       	ldi	r30, 0x36	; 54
    229a:	f0 e0       	ldi	r31, 0x00	; 0
    229c:	80 81       	ld	r24, Z
    229e:	88 2f       	mov	r24, r24
    22a0:	90 e0       	ldi	r25, 0x00	; 0
    22a2:	82 70       	andi	r24, 0x02	; 2
    22a4:	90 70       	andi	r25, 0x00	; 0
    22a6:	00 97       	sbiw	r24, 0x00	; 0
    22a8:	a9 f3       	breq	.-22     	; 0x2294 <hour_inc+0x17c>
	}
}
    22aa:	2e 96       	adiw	r28, 0x0e	; 14
    22ac:	0f b6       	in	r0, 0x3f	; 63
    22ae:	f8 94       	cli
    22b0:	de bf       	out	0x3e, r29	; 62
    22b2:	0f be       	out	0x3f, r0	; 63
    22b4:	cd bf       	out	0x3d, r28	; 61
    22b6:	cf 91       	pop	r28
    22b8:	df 91       	pop	r29
    22ba:	08 95       	ret

000022bc <hour_dec>:

void hour_dec() {
    22bc:	df 93       	push	r29
    22be:	cf 93       	push	r28
    22c0:	cd b7       	in	r28, 0x3d	; 61
    22c2:	de b7       	in	r29, 0x3e	; 62
    22c4:	2e 97       	sbiw	r28, 0x0e	; 14
    22c6:	0f b6       	in	r0, 0x3f	; 63
    22c8:	f8 94       	cli
    22ca:	de bf       	out	0x3e, r29	; 62
    22cc:	0f be       	out	0x3f, r0	; 63
    22ce:	cd bf       	out	0x3d, r28	; 61
	DDRB &= ~(1 << 0);
    22d0:	a7 e3       	ldi	r26, 0x37	; 55
    22d2:	b0 e0       	ldi	r27, 0x00	; 0
    22d4:	e7 e3       	ldi	r30, 0x37	; 55
    22d6:	f0 e0       	ldi	r31, 0x00	; 0
    22d8:	80 81       	ld	r24, Z
    22da:	8e 7f       	andi	r24, 0xFE	; 254
    22dc:	8c 93       	st	X, r24
	PORTB |= (1 << 0);   //internal pull up
    22de:	a8 e3       	ldi	r26, 0x38	; 56
    22e0:	b0 e0       	ldi	r27, 0x00	; 0
    22e2:	e8 e3       	ldi	r30, 0x38	; 56
    22e4:	f0 e0       	ldi	r31, 0x00	; 0
    22e6:	80 81       	ld	r24, Z
    22e8:	81 60       	ori	r24, 0x01	; 1
    22ea:	8c 93       	st	X, r24
	if (!(PINB & (1 << 0))) {
    22ec:	e6 e3       	ldi	r30, 0x36	; 54
    22ee:	f0 e0       	ldi	r31, 0x00	; 0
    22f0:	80 81       	ld	r24, Z
    22f2:	88 2f       	mov	r24, r24
    22f4:	90 e0       	ldi	r25, 0x00	; 0
    22f6:	81 70       	andi	r24, 0x01	; 1
    22f8:	90 70       	andi	r25, 0x00	; 0
    22fa:	00 97       	sbiw	r24, 0x00	; 0
    22fc:	09 f0       	breq	.+2      	; 0x2300 <hour_dec+0x44>
    22fe:	a1 c0       	rjmp	.+322    	; 0x2442 <hour_dec+0x186>
    2300:	80 e0       	ldi	r24, 0x00	; 0
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	a0 ef       	ldi	r26, 0xF0	; 240
    2306:	b1 e4       	ldi	r27, 0x41	; 65
    2308:	8b 87       	std	Y+11, r24	; 0x0b
    230a:	9c 87       	std	Y+12, r25	; 0x0c
    230c:	ad 87       	std	Y+13, r26	; 0x0d
    230e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2310:	6b 85       	ldd	r22, Y+11	; 0x0b
    2312:	7c 85       	ldd	r23, Y+12	; 0x0c
    2314:	8d 85       	ldd	r24, Y+13	; 0x0d
    2316:	9e 85       	ldd	r25, Y+14	; 0x0e
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	4a e7       	ldi	r20, 0x7A	; 122
    231e:	55 e4       	ldi	r21, 0x45	; 69
    2320:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2324:	dc 01       	movw	r26, r24
    2326:	cb 01       	movw	r24, r22
    2328:	8f 83       	std	Y+7, r24	; 0x07
    232a:	98 87       	std	Y+8, r25	; 0x08
    232c:	a9 87       	std	Y+9, r26	; 0x09
    232e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2330:	6f 81       	ldd	r22, Y+7	; 0x07
    2332:	78 85       	ldd	r23, Y+8	; 0x08
    2334:	89 85       	ldd	r24, Y+9	; 0x09
    2336:	9a 85       	ldd	r25, Y+10	; 0x0a
    2338:	20 e0       	ldi	r18, 0x00	; 0
    233a:	30 e0       	ldi	r19, 0x00	; 0
    233c:	40 e8       	ldi	r20, 0x80	; 128
    233e:	5f e3       	ldi	r21, 0x3F	; 63
    2340:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2344:	88 23       	and	r24, r24
    2346:	2c f4       	brge	.+10     	; 0x2352 <hour_dec+0x96>
		__ticks = 1;
    2348:	81 e0       	ldi	r24, 0x01	; 1
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	9e 83       	std	Y+6, r25	; 0x06
    234e:	8d 83       	std	Y+5, r24	; 0x05
    2350:	3f c0       	rjmp	.+126    	; 0x23d0 <hour_dec+0x114>
	else if (__tmp > 65535)
    2352:	6f 81       	ldd	r22, Y+7	; 0x07
    2354:	78 85       	ldd	r23, Y+8	; 0x08
    2356:	89 85       	ldd	r24, Y+9	; 0x09
    2358:	9a 85       	ldd	r25, Y+10	; 0x0a
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	3f ef       	ldi	r19, 0xFF	; 255
    235e:	4f e7       	ldi	r20, 0x7F	; 127
    2360:	57 e4       	ldi	r21, 0x47	; 71
    2362:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2366:	18 16       	cp	r1, r24
    2368:	4c f5       	brge	.+82     	; 0x23bc <hour_dec+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    236a:	6b 85       	ldd	r22, Y+11	; 0x0b
    236c:	7c 85       	ldd	r23, Y+12	; 0x0c
    236e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2370:	9e 85       	ldd	r25, Y+14	; 0x0e
    2372:	20 e0       	ldi	r18, 0x00	; 0
    2374:	30 e0       	ldi	r19, 0x00	; 0
    2376:	40 e2       	ldi	r20, 0x20	; 32
    2378:	51 e4       	ldi	r21, 0x41	; 65
    237a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    237e:	dc 01       	movw	r26, r24
    2380:	cb 01       	movw	r24, r22
    2382:	bc 01       	movw	r22, r24
    2384:	cd 01       	movw	r24, r26
    2386:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    238a:	dc 01       	movw	r26, r24
    238c:	cb 01       	movw	r24, r22
    238e:	9e 83       	std	Y+6, r25	; 0x06
    2390:	8d 83       	std	Y+5, r24	; 0x05
    2392:	0f c0       	rjmp	.+30     	; 0x23b2 <hour_dec+0xf6>
    2394:	80 e9       	ldi	r24, 0x90	; 144
    2396:	91 e0       	ldi	r25, 0x01	; 1
    2398:	9c 83       	std	Y+4, r25	; 0x04
    239a:	8b 83       	std	Y+3, r24	; 0x03
    239c:	8b 81       	ldd	r24, Y+3	; 0x03
    239e:	9c 81       	ldd	r25, Y+4	; 0x04
    23a0:	01 97       	sbiw	r24, 0x01	; 1
    23a2:	f1 f7       	brne	.-4      	; 0x23a0 <hour_dec+0xe4>
    23a4:	9c 83       	std	Y+4, r25	; 0x04
    23a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23a8:	8d 81       	ldd	r24, Y+5	; 0x05
    23aa:	9e 81       	ldd	r25, Y+6	; 0x06
    23ac:	01 97       	sbiw	r24, 0x01	; 1
    23ae:	9e 83       	std	Y+6, r25	; 0x06
    23b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23b2:	8d 81       	ldd	r24, Y+5	; 0x05
    23b4:	9e 81       	ldd	r25, Y+6	; 0x06
    23b6:	00 97       	sbiw	r24, 0x00	; 0
    23b8:	69 f7       	brne	.-38     	; 0x2394 <hour_dec+0xd8>
    23ba:	14 c0       	rjmp	.+40     	; 0x23e4 <hour_dec+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23bc:	6f 81       	ldd	r22, Y+7	; 0x07
    23be:	78 85       	ldd	r23, Y+8	; 0x08
    23c0:	89 85       	ldd	r24, Y+9	; 0x09
    23c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    23c4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23c8:	dc 01       	movw	r26, r24
    23ca:	cb 01       	movw	r24, r22
    23cc:	9e 83       	std	Y+6, r25	; 0x06
    23ce:	8d 83       	std	Y+5, r24	; 0x05
    23d0:	8d 81       	ldd	r24, Y+5	; 0x05
    23d2:	9e 81       	ldd	r25, Y+6	; 0x06
    23d4:	9a 83       	std	Y+2, r25	; 0x02
    23d6:	89 83       	std	Y+1, r24	; 0x01
    23d8:	89 81       	ldd	r24, Y+1	; 0x01
    23da:	9a 81       	ldd	r25, Y+2	; 0x02
    23dc:	01 97       	sbiw	r24, 0x01	; 1
    23de:	f1 f7       	brne	.-4      	; 0x23dc <hour_dec+0x120>
    23e0:	9a 83       	std	Y+2, r25	; 0x02
    23e2:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(30);
		if (!(PINB & (1 << 0))) {
    23e4:	e6 e3       	ldi	r30, 0x36	; 54
    23e6:	f0 e0       	ldi	r31, 0x00	; 0
    23e8:	80 81       	ld	r24, Z
    23ea:	88 2f       	mov	r24, r24
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	81 70       	andi	r24, 0x01	; 1
    23f0:	90 70       	andi	r25, 0x00	; 0
    23f2:	00 97       	sbiw	r24, 0x00	; 0
    23f4:	31 f5       	brne	.+76     	; 0x2442 <hour_dec+0x186>
			hour_unit--;
    23f6:	80 91 6e 00 	lds	r24, 0x006E
    23fa:	81 50       	subi	r24, 0x01	; 1
    23fc:	80 93 6e 00 	sts	0x006E, r24
			if (hour_unit == -1 && hour_tens != 0) {
    2400:	80 91 6e 00 	lds	r24, 0x006E
    2404:	8f 3f       	cpi	r24, 0xFF	; 255
    2406:	61 f4       	brne	.+24     	; 0x2420 <hour_dec+0x164>
    2408:	80 91 6f 00 	lds	r24, 0x006F
    240c:	88 23       	and	r24, r24
    240e:	41 f0       	breq	.+16     	; 0x2420 <hour_dec+0x164>
				hour_tens--;
    2410:	80 91 6f 00 	lds	r24, 0x006F
    2414:	81 50       	subi	r24, 0x01	; 1
    2416:	80 93 6f 00 	sts	0x006F, r24
				hour_unit = 9;
    241a:	89 e0       	ldi	r24, 0x09	; 9
    241c:	80 93 6e 00 	sts	0x006E, r24
			}
			if (hour_unit == -1 && hour_tens == 0) {
    2420:	80 91 6e 00 	lds	r24, 0x006E
    2424:	8f 3f       	cpi	r24, 0xFF	; 255
    2426:	69 f4       	brne	.+26     	; 0x2442 <hour_dec+0x186>
    2428:	80 91 6f 00 	lds	r24, 0x006F
    242c:	88 23       	and	r24, r24
    242e:	49 f4       	brne	.+18     	; 0x2442 <hour_dec+0x186>
				hour_unit = 9;
    2430:	89 e0       	ldi	r24, 0x09	; 9
    2432:	80 93 6e 00 	sts	0x006E, r24
				hour_tens = 9;
    2436:	89 e0       	ldi	r24, 0x09	; 9
    2438:	80 93 6f 00 	sts	0x006F, r24
    243c:	02 c0       	rjmp	.+4      	; 0x2442 <hour_dec+0x186>
			}
		}
	}
	while (!(PINB & (1 << 0))) {display();
    243e:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    2442:	e6 e3       	ldi	r30, 0x36	; 54
    2444:	f0 e0       	ldi	r31, 0x00	; 0
    2446:	80 81       	ld	r24, Z
    2448:	88 2f       	mov	r24, r24
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	81 70       	andi	r24, 0x01	; 1
    244e:	90 70       	andi	r25, 0x00	; 0
    2450:	00 97       	sbiw	r24, 0x00	; 0
    2452:	a9 f3       	breq	.-22     	; 0x243e <hour_dec+0x182>
	}
}
    2454:	2e 96       	adiw	r28, 0x0e	; 14
    2456:	0f b6       	in	r0, 0x3f	; 63
    2458:	f8 94       	cli
    245a:	de bf       	out	0x3e, r29	; 62
    245c:	0f be       	out	0x3f, r0	; 63
    245e:	cd bf       	out	0x3d, r28	; 61
    2460:	cf 91       	pop	r28
    2462:	df 91       	pop	r29
    2464:	08 95       	ret

00002466 <main>:

int main(void) {
    2466:	df 93       	push	r29
    2468:	cf 93       	push	r28
    246a:	cd b7       	in	r28, 0x3d	; 61
    246c:	de b7       	in	r29, 0x3e	; 62
	timer1_init();
    246e:	0e 94 76 0a 	call	0x14ec	; 0x14ec <timer1_init>
	DDRC = 0b00001111;
    2472:	e4 e3       	ldi	r30, 0x34	; 52
    2474:	f0 e0       	ldi	r31, 0x00	; 0
    2476:	8f e0       	ldi	r24, 0x0F	; 15
    2478:	80 83       	st	Z, r24
	DDRA = 0b11111111;
    247a:	ea e3       	ldi	r30, 0x3A	; 58
    247c:	f0 e0       	ldi	r31, 0x00	; 0
    247e:	8f ef       	ldi	r24, 0xFF	; 255
    2480:	80 83       	st	Z, r24
	PORTA = 0b11111111;
    2482:	eb e3       	ldi	r30, 0x3B	; 59
    2484:	f0 e0       	ldi	r31, 0x00	; 0
    2486:	8f ef       	ldi	r24, 0xFF	; 255
    2488:	80 83       	st	Z, r24
	while (1) {
		buzzer();
    248a:	0e 94 a3 05 	call	0xb46	; 0xb46 <buzzer>
		resume();
    248e:	0e 94 9a 0b 	call	0x1734	; 0x1734 <resume>
		pause();
    2492:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <pause>
		reset();
    2496:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <reset>
		current_mode();
    249a:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <current_mode>
		sec_inc();
    249e:	0e 94 3e 0d 	call	0x1a7c	; 0x1a7c <sec_inc>
		sec_dec();
    24a2:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <sec_dec>
		min_inc();
    24a6:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <min_inc>
		min_dec();
    24aa:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <min_dec>
		hour_inc();
    24ae:	0e 94 8c 10 	call	0x2118	; 0x2118 <hour_inc>
		hour_dec();
    24b2:	0e 94 5e 11 	call	0x22bc	; 0x22bc <hour_dec>

		if (mode == 1) {
    24b6:	80 91 68 00 	lds	r24, 0x0068
    24ba:	81 30       	cpi	r24, 0x01	; 1
    24bc:	29 f4       	brne	.+10     	; 0x24c8 <main+0x62>
			RED_LED_ON();
    24be:	0e 94 2b 0c 	call	0x1856	; 0x1856 <RED_LED_ON>
			YELLOW_LED_OFF();
    24c2:	0e 94 6a 0c 	call	0x18d4	; 0x18d4 <YELLOW_LED_OFF>
    24c6:	08 c0       	rjmp	.+16     	; 0x24d8 <main+0x72>
		} else if (mode == 0) {
    24c8:	80 91 68 00 	lds	r24, 0x0068
    24cc:	88 23       	and	r24, r24
    24ce:	21 f4       	brne	.+8      	; 0x24d8 <main+0x72>
			YELLOW_LED_ON();
    24d0:	0e 94 55 0c 	call	0x18aa	; 0x18aa <YELLOW_LED_ON>
			RED_LED_OFF();
    24d4:	0e 94 40 0c 	call	0x1880	; 0x1880 <RED_LED_OFF>
		}

		display();
    24d8:	0e 94 15 07 	call	0xe2a	; 0xe2a <display>
    24dc:	d6 cf       	rjmp	.-84     	; 0x248a <main+0x24>

000024de <__prologue_saves__>:
    24de:	2f 92       	push	r2
    24e0:	3f 92       	push	r3
    24e2:	4f 92       	push	r4
    24e4:	5f 92       	push	r5
    24e6:	6f 92       	push	r6
    24e8:	7f 92       	push	r7
    24ea:	8f 92       	push	r8
    24ec:	9f 92       	push	r9
    24ee:	af 92       	push	r10
    24f0:	bf 92       	push	r11
    24f2:	cf 92       	push	r12
    24f4:	df 92       	push	r13
    24f6:	ef 92       	push	r14
    24f8:	ff 92       	push	r15
    24fa:	0f 93       	push	r16
    24fc:	1f 93       	push	r17
    24fe:	cf 93       	push	r28
    2500:	df 93       	push	r29
    2502:	cd b7       	in	r28, 0x3d	; 61
    2504:	de b7       	in	r29, 0x3e	; 62
    2506:	ca 1b       	sub	r28, r26
    2508:	db 0b       	sbc	r29, r27
    250a:	0f b6       	in	r0, 0x3f	; 63
    250c:	f8 94       	cli
    250e:	de bf       	out	0x3e, r29	; 62
    2510:	0f be       	out	0x3f, r0	; 63
    2512:	cd bf       	out	0x3d, r28	; 61
    2514:	09 94       	ijmp

00002516 <__epilogue_restores__>:
    2516:	2a 88       	ldd	r2, Y+18	; 0x12
    2518:	39 88       	ldd	r3, Y+17	; 0x11
    251a:	48 88       	ldd	r4, Y+16	; 0x10
    251c:	5f 84       	ldd	r5, Y+15	; 0x0f
    251e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2520:	7d 84       	ldd	r7, Y+13	; 0x0d
    2522:	8c 84       	ldd	r8, Y+12	; 0x0c
    2524:	9b 84       	ldd	r9, Y+11	; 0x0b
    2526:	aa 84       	ldd	r10, Y+10	; 0x0a
    2528:	b9 84       	ldd	r11, Y+9	; 0x09
    252a:	c8 84       	ldd	r12, Y+8	; 0x08
    252c:	df 80       	ldd	r13, Y+7	; 0x07
    252e:	ee 80       	ldd	r14, Y+6	; 0x06
    2530:	fd 80       	ldd	r15, Y+5	; 0x05
    2532:	0c 81       	ldd	r16, Y+4	; 0x04
    2534:	1b 81       	ldd	r17, Y+3	; 0x03
    2536:	aa 81       	ldd	r26, Y+2	; 0x02
    2538:	b9 81       	ldd	r27, Y+1	; 0x01
    253a:	ce 0f       	add	r28, r30
    253c:	d1 1d       	adc	r29, r1
    253e:	0f b6       	in	r0, 0x3f	; 63
    2540:	f8 94       	cli
    2542:	de bf       	out	0x3e, r29	; 62
    2544:	0f be       	out	0x3f, r0	; 63
    2546:	cd bf       	out	0x3d, r28	; 61
    2548:	ed 01       	movw	r28, r26
    254a:	08 95       	ret

0000254c <_exit>:
    254c:	f8 94       	cli

0000254e <__stop_program>:
    254e:	ff cf       	rjmp	.-2      	; 0x254e <__stop_program>
